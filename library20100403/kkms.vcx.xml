<?xml version = "1.0" encoding="UTF-8" standalone="yes"?>
<VFPData>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>Class</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname/>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>VERSION =   3.00</reserved1>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1270KTSSA</uniqueid>
		<timestamp>928627323</timestamp>
		<class>cst</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>custom</baseclass>
		<objname>shtrihmercur</objname>
		<parent/>
		<properties>idoperator = 30
summcheck = 0
comport = 1
baudrate = 6
summ = 0
dsccheckperc = 0
errorcode = 0
drvname = AddIn.DrvFR
timeout = 50
kkm = ØÒÐÈÕ-ÔÐ-Ð
headerfile = 
nameoperator = 
allowvat = .F.
cutenabled = .F.
cuttype = .T.
typechargeout = 0
drv = 
lenabled = .T.
Name = "shtrih"
</properties>
		<protected>comport
baudrate
drvname
timeout
opened
headerfile
lenabled
writetable
</protected>
		<methods>PROCEDURE beep
*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
RETURN
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:54 -&gt;ãóäîê
This.ErrorCode = 0
.Password = This.IdOperator
.Beep()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cancelcheck
*18.04.2006 09:52 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:52 -&gt;àííóëèðîâàíèå(ñáðîñ) ÷åêà (òîëüêî ñ ïàðîëåì àäìèíèñòðàòîðà)
This.ErrorCode = 0
.Password = This.IdOperator
.CancelCheck()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE changeheader
*18.04.2006 09:41 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL   lnHeaderFile, ;
		lnLineCounter, ;
		lcHeadLine
*------------------------------------------------------------------------------

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*18.04.2006 09:42 -&gt;çàïèñü íîâîãî çàãîëîâêà â òàáëèöó ¹4 ÊÊÌ	
IF !EMPTY(.HeaderFile) AND FILE(.HeaderFile)
	lnHeaderFile = FOPEN(.HeaderFile)
	IF lnHeaderFile &gt; 0
		lnLineCounter = 0
		DO WHILE !FEOF(lnHeaderFile) AND lnLineCounter &lt; 3 AND .drv.ResultCode = 0
			lcHeadLine = FGETS(lnHeaderFile)
			.WriteTable(4,1,4+lnLineCounter,lcHeadLine)
			lnLineCounter = lnLineCounter+1
		ENDDO
		FCLOSE(lnHeaderFile)
	ENDIF
ENDIF
.SetErrorCode(.drv.ResultCode)
*------------------------------------------------------------------------------
	
ENDWITH

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checkdiscount
LPARAMETERS	lyDiscSumm,tcDiscountComment

*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*22.04.2006 10:02 -&gt;ñêèäêà
This.ErrorCode = 0
.Password = This.IdOperator
STORE 0 TO .Summ2, .Summ3, .Summ4
.Summ1 = lyDiscSumm

IF TYPE([tcDiscountComment])=[C]
	.StringForPrinting = tcDiscountComment
ENDIF

.Discount()
IF .ResultCode # 0
	This.SetErrorCode(.ResultCode)
	RETURN
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksalereturn
LPARAMETERS	lnTvrNM,tnQnt,tyPrice

*18.04.2006 09:49 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:50 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè âîçâðàòà ïðîäàæè
This.ErrorCode = 0
.Password = This.IdOperator

.Price = tyPrice
.Quantity = tnQnt
STORE 0 TO .Tax1, .Tax2, .Tax3, .Tax4
.StringForPrinting = ALLTRIM(lnTvrNM)
.ReturnSale()
IF .ResultCode # 0
	This.SetErrorCode(.ResultCode)
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksalestorno
LPARAMETERS	tcTvrNM,tnQnt,tyPrice

*18.04.2006 09:48 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:48 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè ñòîðíèðîâàíèÿ
This.ErrorCode = 0
.Password = This.IdOperator
.Summ1 = tyPrice*tnQnt
STORE 0 TO .Tax1, .Tax2, .Tax3, .Tax4
.StringForPrinting = ALLTRIM(tcTvrNM)
.Storno()
IF .ResultCode = 0
	This.SummCheck = THIS.SummCheck - .Summ1
ELSE	
	This.SetErrorCode(.ResultCode)
ENDIF	
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksaletran
LPARAMETERS  tcTvrNM,tnQnt,tyPrice

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:47 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè ïðîäàæè
This.ErrorCode = 0
.Password = THIS.IdOperator

.Quantity = tnQnt
.Price = tyPrice
STORE 0 TO .Tax1, .Tax2, .Tax3, .Tax4
.StringForPrinting = ALLTRIM(tcTvrNM)
.Sale()
IF .ResultCode = 0
	This.SummCheck = THIS.SummCheck + tyPrice*tnQnt
ELSE	
	This.SetErrorCode(.ResultCode)
	RETURN
ENDIF	
*------------------------------------------------------------------------------

ENDWITH
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE closecheck
LPARAMETERS	lyCheckSumm1, lyCheckSumm2, lyCheckSumm3, lyCheckSumm4

*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:53 -&gt;çàêðûòèå ÷åêà
*18.04.2006 09:53 -&gt;ïåðåä îïåðàöèåé âîçâðàòà ñáðîñèòü DscCheckPerc
This.ErrorCode = 0
STORE 0 TO .Summ2,.Summ3,.Summ4
.Password = This.IdOperator
.Summ1 = lyCheckSumm1
IF PCOUNT()&gt;1
	.Summ2 = lyCheckSumm2
ENDIF
IF PCOUNT()&gt;2
	.Summ3 = lyCheckSumm3
ENDIF
IF PCOUNT()&gt;3
	.Summ4 = lyCheckSumm4
ENDIF
.StringForPrinting = '===================================='
.CloseCheck()
IF .ResultCode # 0
	This.SetErrorCode(.ResultCode)
	RETURN
ENDIF

*!*		STORE 0 TO THIS.DscCheckPerc, THIS.Summ
*!*		LOCAL lnCounter
*!*		lnCounter = 0
*!*		DO WHILE THIS.Ready() # 0 OR lnCounter &lt; 20
*!*			lnCounter = lnCounter + 1
*!*		ENDDO

*------------------------------------------------------------
* îòðåçàòü ÷åê
*THIS.CutCheck()

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closeshift
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:52 -&gt;ñìåííûé îò÷åò ñ ãàøåíèåì
*18.04.2006 09:52 -&gt;ïðîèçâîäèòñÿ òîëüêî ñ ïàðîëåì àäìèíèñòðàòîðà
This.ErrorCode = 0
.Password = This.IdOperator
.PrintReportWithCleaning()
This.ErrorCode = .ResultCode
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE continueprint
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*18.04.2006 09:39 -&gt; ïðîäîëæåíèå ïå÷àòè
*18.04.2006 09:39 -&gt; âûçûâàåòñÿ, åñëè â ïðîöåññå ïå÷àòè êîí÷àåòñÿ áóìàãà
WITH This.drv

This.ErrorCode = 0
.Password = THIS.IdOperator
.ContinuePrint()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD   ***************************************
************************************************************************************************
ENDPROC
PROCEDURE cutcheck
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*30.06.2005 13:03 -&gt;Ïðîâåðèì, ìîæíî ëè îòðåçàòü ÷åê
.Password = This.IdOperator
.CutType = .F.
.CutCheck()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------
	
ENDWITH
*------------------------------------------------------------------------------

*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE Destroy
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv
	IF This.Opened
		.Disconnect() &amp;&amp; îñâîáîäèòü COM-ïîðò
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Error
*
LPARAMETERS nError, cMethod, nLine

*------------------------------------------------------------
WITH THIS
	IF TYPE([.drv])#[O]
		MESSAGEBOX([Íå çàãðóæåí OLE-äðàéâåð],48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
	ELSE
		MESSAGEBOX([Îøèáêà # ]+ALLTRIM(STR(nError))+[ â ìåòîäå ]+cMethod+[ ñòðîêà ]+ ;
						ALLTRIM(STR(nLine)),48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE errorcodedescription
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN 0
ENDIF
*------------------------------------------------------------------------------

RETURN This.drv.ResultCodeDescription
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE feeddocument
LPARAMETERS tnStringQuantity

*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:57 -&gt;Ïðîòÿãèâàåì äîêóìåíò
.StringQuantity	= tnStringQuantity
.UseReceiptRibbon = .T.
.UseJournalRibbon = .F.
.UseSlipDocument = .F.
.Password = This.IdOperator

.FeedDocument()

This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE info
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv
	.ShowProperties() &amp;&amp; ñìîòðèì ñâîéñòâà ÊÊÌ
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Init
*14.04.2006 10:52 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL	lcIniFileName, ;
		lnCom, ;
		lnBaudRate, ;
		lvAllowVAT, ;
		llLibLoad, ;
		lnCutEnabled, ;
		lnCutType
***
lcIniFileName = FULLPATH([KKM.INI])
*------------------------------------------------------------
* ïðî÷èòàåì ïàðàìåòðû ÊÊÌ èç INI-ôàéëà
lnCom = VAL(oRes.GetParam([KKM],[COM],lcIniFileName))	&amp;&amp; íîìåð COM-ïîðòà
***
SET STEP ON
lnBaudRate = VAL(oRes.GetParam([KKM],[BAUDRATE],lcIniFileName)) &amp;&amp; ñêîðîñòü ïåðåäà÷è äàííûõ
THIS.HeaderFile = UPPER(ALLTRIM(oRes.GetParam([KKM],[HEADER],lcIniFileName))) &amp;&amp; èìÿ ôàéëà çàãîëîâêà
***

lnAllowVAT = VAL(oRes.GetParam([KKM],[VAT],lcIniFileName)) &amp;&amp; ïå÷àòü ÍÄÑ
THIS.AllowVAT = lnAllowVAT # 0
***

THIS.lEnabled = (VAL(oRes.GetParam([KKM],[ENABLED],lcIniFileName)) = 1) &amp;&amp; ðàçðåøåíèå ðàáîòû ÔÐ
***

lnCutEnabled = VAL(oRes.GetParam([CHECK],[CUT_ENABLED],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
THIS.CutEnabled = (lnCutEnabled = 1)
***

lnCutType = VAL(oRes.GetParam([CHECK],[CUT_TYPE],lcIniFileName)) &amp;&amp; òèï îáðåçêè ÷åêà (0-íåïîëíûé/1-ïîëíûé)
THIS.CutType = (lnCutType = 0)
***

THIS.TypeChargeOut = VAL(oRes.GetParam([CHECK],[CHARGE],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
***

*------------------------------------------------------------
* Èíèöèàëèçàöèÿ ïîðòà ñâÿçè
WITH THIS
	.ComPort = lnCom
	DO CASE
		CASE lnBaudRate = 115200
			.BaudRate = 6
		CASE lnBaudRate = 57600
			.BaudRate = 5
		CASE lnBaudRate = 38400
			.BaudRate = 4
		CASE lnBaudRate = 19200
			.BaudRate = 3
		CASE lnBaudRate = 9600
			.BaudRate = 2
		CASE lnBaudRate = 4800
			.BaudRate = 1
		CASE lnBaudRate = 2400
			.BaudRate = 0
		OTHERWISE
			.BaudRate = 1
	ENDCASE
	
	.Open()
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE newoperator
*
LPARAMETER ;
	tnOperNo, ; &amp;&amp; íîìåð îïåðàòîðà
	tnOperID, ; &amp;&amp; èäåíòèôèêàòîð îïåðàòîðà
	tcOperName	&amp;&amp; èìÿ îïåðàòîðà
	
*------------------------------------------------------------
IF TYPE([tnOperNo])#[N] AND !BETWEEN(tnOperNo,1,30)
	RETURN .F.  &amp;&amp; íåâåðíûé íîìåð îïåðàòîðà
ENDIF

IF TYPE([tnOperID])#[N] AND !BETWEEN(tnOperID,0,99999999)
	RETURN .F.  &amp;&amp; íåâåðíûé èäåíòèôèêàòîð îïåðàòîðà
ENDIF

IF TYPE([tcOperName])#[C]
	RETURN .F.  &amp;&amp; íåâåðîå èìÿ îïåðàòîðà
ENDIF

WITH THIS
	.WriteTable(2,1,tnOperNo,tnOperID)
	.WriteTable(2,2,tnOperNo,tcOperName)
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE open
* èíèöèàëèçàöèÿ äðàéâåðà
WITH This

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*18.04.2006 09:37 -&gt;Èíèöèàëèçàöèÿ äðàéâåðà
.ErrorCode = 0
.drv = CreateObject(.drvName)
IF TYPE('.drv') = [O]
	* óñòàíîâêà ïàðàìåòðîâ ñâÿçè
	.drv.Password = .IdOperator
	.drv.ComNumber = .ComPort
	.drv.BaudRate = .BaudRate
	.drv.TimeOut = .TimeOut
ELSE
	.ErrorCode = 1000  &amp;&amp; OLE-äðàéâåð íå íàéäåí
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE opendrawer
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*22.04.2006 14:30 -&gt;îòêðûâàåì äåíåæíûé ÿùèê
This.ErrorCode = 0
.Password = This.IdOperator
.DrawerNumber = 0
.OpenDrawer()
This.ErrorCode = .ResultCode
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printsalecheck
* ïå÷àòü ÷åêà ïðîäàæè off-line
WITH THIS
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart()
	
	*------------------------------------------------------------
	* ôîðìèðóåì ïîçèöèþ ïðîäàæè
	SCAN FOR .ErrorCode = 0
		.SalePos()
	ENDSCAN
	
	*------------------------------------------------------------
	* çàêðûâàåì ÷åê
	IF .ErrorCode = 0
		.Summ = .SummCheck
		.CloseCheck()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printstring
LPARAMETERS tcStringForPrinting

*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:55 -&gt;Ïå÷àòü ñòðîêè íà îñíîâíîé ëåíòå
.UseReceiptRibbon = .T.
.UseJournalRibbon = .F.
.UseSlipDocument = .F.
.Password = This.IdOperator

.StringForPrinting = ALLTRIM(tcStringForPrinting)
.PrintString()

This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE ready
*18.04.2006 09:39 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*18.04.2006 09:39 -&gt;Ïðîâåðèì ãîòîâíîñòü ÔÐ
WITH This.drv

.Password = THIS.IdOperator
.GetECRStatus()
RETURN .ECRAdvancedMode

ENDWITH
*------------------------------------------------------------------------------

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE reportx
*18.04.2006 09:50 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:51 -&gt;ñìåííûé îò÷åò áåç ãàøåíèÿ
*18.04.2006 09:51 -&gt;ïðîèçâîäèòñÿ òîëüêî ñ ïàðîëåì àäìèíèñòðàòîðà
This.ErrorCode = 0
.Password = This.IdOperator
.PrintReportWithoutCleaning()
This.SetErrorCode(.ResultCode)

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE returncheck
* ïå÷àòü ÷åêà âîçâðàòà off-line

WITH THIS
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart()
	
	*------------------------------------------------------------
	* ôîðìèðóåì ïîçèöèþ âîçâðàòà òîâàðà
	SCAN FOR .ErrorCode = 0
		.ReturnSalePos()
	ENDSCAN
		
	*------------------------------------------------------------
	* çàêðûâàåì ÷åê
	IF .ErrorCode = 0
		.Summ = .SummCheck
		.CloseCheck()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE seterrorcode

LPARAMETER lnErrorCode

*18.04.2006 09:44 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:45 -&gt;óñòàíîâêà êîäà îøèáêè
IF .ResultCode # 0
	THIS.ErrorCode = lnErrorCode
	MESSAGEBOX(.ResultCodeDescription,48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE writetable
LPARAMETERS tnTable, ; &amp;&amp; íîìåð âíóòðåííåé òàáëèöû ÊÊÌ
			tnField, ; &amp;&amp; ïîëå âíóòðåííåé òàáëèöû ÊÊÌ
			tnRow  , ; &amp;&amp; ðÿä âíóòðåííåé òàáëèöû ÊÊÌ
			tuValue    &amp;&amp; çíà÷åíèå

*18.04.2006 09:45 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

.Password = This.IdOperator
.TableNumber = tnTable
.FieldNumber = tnField
.GetFieldStruct()
.RowNumber = tnRow
IF .FieldType
	.ValueOfFieldString = tuValue
ELSE
	.ValueOfFieldInteger = tuValue
ENDIF
.WriteTable()
This.SetErrorCode(.ResultCode)

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3>idoperator òåêóùèé ïàðîëü ïîëüçîâàòåëÿ
summcheck ñóììà ïî ÷åêó
comport íîìåð COM ïîðòà
baudrate ñêîðîñòü îáìåíà  6 = 115200  5 = 57600 è ò.ä.
summ ñóììà ïëàòû
dsccheckperc ïðîöåíò ñêèäêè íà ÷åê
errorcode êîä îøèáêè
drvname èìÿ äðàéâåðà
timeout òàéì-àóò íà ïåðåäà÷ó áàéòà
kkm íàçâàíèå ÊÊÌ
opened ïðèçíàê îòêðûòîãî ïîðòà ñâÿçè
headerfile èìÿ ôàéëà çàãîëîâêà
nameoperator ôàìèëèÿ îïåðàòîðà
allowvat
cutenabled
cuttype
typechargeout
drv
lenabled ðàçðåøåíèå ðàáîòû ñ ÔÐ
*info 
*open 
*printsalecheck ïå÷àòü ÷åêà âîçâðàòà
*continueprint ïðîäîëæèòü ïå÷àòü
*seterrorcode óñòàíîâêà êîäà îøèáêè
*ready ãîòîâíîñòü ÊÊÌ ê ïå÷àòè
*errorcodedescription 
*returncheck ÷åê âîçâðàòà
*changeheader ñìåíà çàãîëîâêà ÷åêà
*writetable çàïèñü äàííûõ â òàáëèöó ïàðàìåòðîâ ÊÊÌ
*newoperator ðåãèñòðàöèÿ íîâîãî îïåðàòîðà â ÊÊÌ
*checksaletran ïðîäàæà
*checksalestorno 
*checksalereturn 
*reportx X-îò÷åò
*closeshift çàêðûòèå ñìåíû
*cancelcheck ñáðîñ ÷åêà
*closecheck çàêðûòèå ÷åêà
*beep ãóäîê
*printstring ïå÷àòü ñòðîêè
*feeddocument ïðîòÿæêà äîêóìåíòà
*checkdiscount ñêèäêà íà ÷åê
*opendrawer îòêðûòèå äåíåæíîãî ÿùèêà
*cutcheck îòðåçêà ÷åêà
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7>óïðàâëåíèå ÊÊÌ "Ìåðêóðèé"</reserved7>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>shtrihmercur</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_28U0Z47FM</uniqueid>
		<timestamp>931629365</timestamp>
		<class>oleprint</class>
		<classloc>olecomm.vcx</classloc>
		<baseclass>olecontrol</baseclass>
		<objname>sprint</objname>
		<parent/>
		<properties>Height = 48
Width = 58
Name = "sprint"
</properties>
		<protected/>
		<methods>PROCEDURE feeddocument
LPARAMETERS tnStringQuantity
IF tnStringQuantity &lt;1
RETURN
ENDIF
*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
FOR nStr = 1 TO tnStringQuantity
	this.printstring(' ')
ENDFOR
*------------------------------------------------------------------------------
RETURN
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printstring
LPARAMETERS lcPrintString
*this._write(lcPrintString)
this.Output(lcPrintString)

ENDPROC
</methods>
		<objcode/>
		<ole>0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKDA+AvKOMgBAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABLAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAIAAAD+/////vopkbiwbEIK2AAAAAAAUIUM0EggAAADtAwAA7QMAAAFWimQAAAYAAAABAAAEAAAAAgAAgCUAAAAACAAAAAAASwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABMAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDb3B5cmlnaHQgKGMpIDE5OTQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</ole>
		<ole2>OLEObject = C:\WINDOWS\system32\mscomm32.ocx
</ole2>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>sprint</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1X20TUDK9</uniqueid>
		<timestamp>931943869</timestamp>
		<class>frm</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>form</baseclass>
		<objname>frmkkmstatus</objname>
		<parent/>
		<properties>Height = 75
Width = 350
ShowWindow = 1
DoCreate = .T.
AutoCenter = .T.
BorderStyle = 2
Caption = "Îøèáêà ÊÊÌ"
Closable = .F.
MaxButton = .F.
MinButton = .F.
okkm = 
uretval = 0
Name = "frmkkmstatus"
cstmsghandler.Name = "cstmsghandler"
cstresizable.Name = "cstresizable"
</properties>
		<protected/>
		<methods>PROCEDURE Destroy
This.OKKM.SetAllowErrorMsgFlag(.T.)
ENDPROC
PROCEDURE Init
LPARAMETERS toKKM

*11.10.2006 13:56 -&gt;Âûïîëíèì ìåòîä ðîäèòåëüñêîãî êëàññà
DODEFAULT()
*------------------------------------------------------------------------------

*16.10.2006 15:24 -&gt;Ñîõðàíèì ïàðàìåòðû
This.oKKM = toKKM
*------------------------------------------------------------------------------

This.oKKM.SetAllowErrorMsgFlag(.F.)

This.StatusRefresh()

*16.10.2006 15:24 -&gt;Ðàçðåøèì îïðîñ ñîñòîÿíèÿ
This.Timer.Enabled = .T.
*------------------------------------------------------------------------------

*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE KeyPress
LPARAMETERS nKeyCode, nShiftAltCtrl

*18.10.2006 11:02 -&gt;Âûõîä
IF nKeyCode = 48 &amp;&amp; 0

	ThisForm.uRetVal = .F.
	ThisForm.Hide()

ENDIF
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE statusrefresh
WITH This
SET STEP ON
*11.10.2006 17:04 -&gt;Ïîëó÷èì ïîäðåæèì ÊÊÌ
lnECRAdvancedMode = .oKKM.GetECRAdvancedMode(.T.)
*------------------------------------------------------------------------------

*11.10.2006 17:10 -&gt;Àíàëèçèðóåì ïîäðåæèì
DO CASE
	CASE BETWEEN(.oKKM.ErrorCode,-6,-1)
		.lblMode.Caption = [Ïðîâåðêà ñâÿçè ñ ÊÊÌ...]
		.oKKM.Beep()
		RETURN .F.
	CASE INLIST(lnECRAdvancedMode,1,2)
		.lblMode.Caption = [Âñòàâüòå ðóëîí áóìàãè â ÊÊÌ...]
		RETURN .F.
	CASE lnECRAdvancedMode = 3
		.lblMode.Caption = [Ïðîäîëæåíèå ïå÷àòè...]
		.oKKM.ContinuePrint()
		RETURN .F.
	CASE INLIST(lnECRAdvancedMode,4,5)
		RETURN .F.
	OTHERWISE
		***
		.lblMode.Caption = [Ñáðîñ ÷åêà...]
		***
		RETURN .T.
ENDCASE
*------------------------------------------------------------------------------

ENDWITH
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>5</reserved2>
		<reserved3>okkm ññûëêà íà îáúåêò ÔÐ
uretval
*statusrefresh Îáíîâëåíèå äàííûõ î ñòàòóñå ÊÊÌ
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1X90O4XCN</uniqueid>
		<timestamp>931025239</timestamp>
		<class>shp</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>shape</baseclass>
		<objname>Shp1</objname>
		<parent>frmkkmstatus</parent>
		<properties>Top = 36
Left = 75
Height = 36
Width = 200
SpecialEffect = 0
ZOrderSet = 0
Name = "Shp1"
</properties>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1X20TX0O5</uniqueid>
		<timestamp>931025239</timestamp>
		<class>timer</class>
		<classloc/>
		<baseclass>timer</baseclass>
		<objname>Timer</objname>
		<parent>frmkkmstatus</parent>
		<properties>Top = 36
Left = 0
Height = 23
Width = 23
Enabled = .F.
Interval = 1000
Name = "Timer"
</properties>
		<protected/>
		<methods>PROCEDURE Timer
IF This.Parent.StatusRefresh()

	This.Enabled = .F.

	This.Parent.uRetVal = .T.
	This.Parent.Hide()

ENDIF
ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_14A10BTEI</uniqueid>
		<timestamp>931025239</timestamp>
		<class>lbl</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>label</baseclass>
		<objname>lblMode</objname>
		<parent>frmkkmstatus</parent>
		<properties>AutoSize = .F.
FontBold = .T.
FontSize = 12
Caption = "Ðåæèì:"
Height = 22
Left = 10
Top = 7
Width = 330
ZOrderSet = 4
Name = "lblMode"
</properties>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1X90NPXVA</uniqueid>
		<timestamp>931025239</timestamp>
		<class>lbl</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>label</baseclass>
		<objname>lblExit</objname>
		<parent>frmkkmstatus</parent>
		<properties>AutoSize = .F.
FontBold = .T.
WordWrap = .T.
Alignment = 2
Caption = "Íàæìèòå '0' äëÿ âûõîäà èç ïðîãðàììû"
Height = 32
Left = 77
Top = 38
Width = 195
ZOrderSet = 5
Name = "lblExit"
</properties>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>frmkkmstatus</objname>
		<parent/>
		<properties>Arial, 0, 9, 5, 15, 12, 32, 3, 0
</properties>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_0L212IY3W</uniqueid>
		<timestamp>949395277</timestamp>
		<class>custom</class>
		<classloc/>
		<baseclass>custom</baseclass>
		<objname>mebis</objname>
		<parent/>
		<properties>Height = 107
Width = 236
version = v 1.0
copyright = (c)2008 ÑÁÀ
password = 
comport = COM1:
idoperator = 0
baudrate = 57600
summcheck = 0
pos = 0
dsccheckperc = 0
drvname = mbserv.cVMBD
errorcode = 0
summ = 0
kkm = ÌÅÁÈÓÑ
timeout = 30000
nameoperator = 
lenabled = .F.
headerfile = 
opened = .F.
allowvat = .F.
cutenabled = .F.
cuttype = 0
makecheck = .F.
lcheckopen = .F.
summa2 = 0
summa3 = 0
summa4 = 0
Name = "mebis"
</properties>
		<protected>version
copyright
password
comport
baudrate
summcheck
pos
errflag
drv
drvname
timeout
closeole
setpassword
proccheck
begincheck
proccheckex
printtext
open
errorcodedescription
</protected>
		<methods>PROCEDURE begincheck
*
LPARAMETER Date1, IDDoc, CTFlag, LDFlag, SPCTFlag, SPLDFlag

*------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	IF !.ErrFlag
		.drv.oBeginCheck(Date1, IDDoc, CTFlag, LDFlag, SPCTFlag, SPLDFlag)
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cancelcheck
* ñáðîñ ÷åêà
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	.drv.oAbortCheck()
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cashincome
* Âíåñåíèå â êàññó
LOCAL ;
	lcDate, ;
	loGetSum

*------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	*------------------------------------------------------------
	* Âîçüìåì ñóììó âíåñåíèÿ
	SET CLASSLIB TO mebis.vcx ADDITIVE
	loGetSum = CREATEOBJECT([getsum])
	RELEASE CLASSLIB mebis.vcx
	
	loGetSum.Caption = [Âíåñåíèå äåíåæíûõ ñðåäñòâ â êàññó]
	loGetSum.Show()

	IF !ISNULL(loGetSum)
		RETURN .F.
	ENDIF	

	.Summ = loGetSum.uRetValue
	RELEASE loGetSum

	*------------------------------------------------------------
	* Ôîðìèðóåì äîêóìåíò âíåñåíèÿ
	lcDate = .convertdate(datetime())
	.BeginCheck(lcDate, 1, 1, 0, 0, 0)
	.ProcCheck(1, 1, 0, 0, 6, 1, 0, 0, "----------------------------", 1)  &amp;&amp;--ðàçäåëèòåëü
	.ProcCheck(28, 1, 0, 0, 1, 2, 0, 0, "1;3;0;0;1;4;0;0;1;5;0;0;1;6;0;0", 3)  &amp;&amp;--íàçâàíèå ïðåäïðèÿòèÿ
	.ProcCheck(1, 1, 0, 0, 1, 7, 0, 0, "--------------------------------------", 1) &amp;&amp;--ðàçäåëèòåëü

	.ProcCheck(111, 1, 0, 0, 1, 8, 0, 0, "d", 0) &amp;&amp;--???
	.ProcCheck(43, 1, 0, 0, 1, 9, 0, 0, "d", 0)  &amp;&amp;--òèòë äîêóìåíò#
	.ProcCheck(42, 1, 0, 0, 10, 9, 0, 0, "d", 0) &amp;&amp;--ïîðÿäêîâûé íîìåð äîêóìåíòà
	.ProcCheck(31, 1, 0, 0, 1, 10, 0, 0, "d", 0) &amp;&amp;--òèòë ÏÔÏ#
	.ProcCheck(30, 1, 0, 0, 10, 10, 0, 0, "d", 0)&amp;&amp;--íîìåð ÊÊÌ
	.ProcCheck(52, 1, 0, 0, 23, 10, 0, 0, "d", 0)&amp;&amp;--íàçâàíèå äîêóìåíòà
	.ProcCheck(35, 1, 0, 0, 1, 11, 0, 0, "d", 0) &amp;&amp;--òèòë îïåðàòîð
	.ProcCheck(34, 1, 0, 0, 10, 11, 0, 0, "d", 0)&amp;&amp;--êîä îïåðàòîðà
	.ProcCheck(36, 1, 0, 0, 15, 12, 0, 0, "d", 0)&amp;&amp;--èìÿ îïåðàòîðà
	.ProcCheck(39, 1, 0, 0, 1, 13, 0, 0, "d", 0) &amp;&amp;--òèòë äàòà
	.ProcCheck(38, 1, 0, 0, 10, 13, 0, 0, "d", 0)&amp;&amp;--äàòà
	.ProcCheck(41, 1, 0, 0, 1, 14, 0, 0, "d", 0) &amp;&amp;--òèòë âðåìÿ
	.ProcCheck(40, 1, 0, 0, 10, 14, 0, 0, "d", 0)&amp;&amp;--âðåìÿ
	
	*------------------------------------------------------------
	* Èòîãî
	.ProcCheck(81, 1, 0, 0, 1, 16, 0, 0, "d", 0)       &amp;&amp;--òèòë èòîãî
	.ProcCheck(79, 1, 0, 0, 15, 16, 0, 0, .mstr(.Summ), 2) &amp;&amp;--ñóììà
	.ProcCheck(102, 1, 0, 0, 15, 17, 0, 0, "", 1)      &amp;&amp;--çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà

	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cashoutcome
* âûåìêà èç êàññû
LOCAL ;
	lcDate, ;
	loGetSum

*------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	*------------------------------------------------------------
	* Âîçüìåì ñóììó âûåìêè
	SET CLASSLIB TO mebis.vcx ADDITIVE
	loGetSum = CREATEOBJECT([getsum])
	RELEASE CLASSLIB mebis.vcx
	
	loGetSum.Caption = [Âûïëàòà äåíåæíûõ ñðåäñòâ èç êàññû]
	loGetSum.Show()

	IF ISNULL(loGetSum)
		RETURN .F.
	ENDIF

	.Summ = loGetSum.uRetVal
	RELEASE loGetSum
	
	*------------------------------------------------------------
	* Ôîðìèðóåì äîêóìåíò âûåìêè
	lcDate = .convertdate(datetime())
	.BeginCheck(lcDate, 2, 1, 0, 0, 0)
	.ProcCheck(1, 1, 0, 0, 6, 1, 0, 0, "----------------------------", 1)  &amp;&amp;--ðàçäåëèòåëü
	.ProcCheck(28, 1, 0, 0, 1, 2, 0, 0, "1;3;0;0;1;4;0;0;1;5;0;0;1;6;0;0", 3)  &amp;&amp;--íàçâàíèå ïðåäïðèÿòèÿ
	.ProcCheck(1, 1, 0, 0, 1, 7, 0, 0, "--------------------------------------", 1) &amp;&amp;--ðàçäåëèòåëü

	.ProcCheck(111, 1, 0, 0, 1, 8, 0, 0, "d", 0) &amp;&amp;--???
	.ProcCheck(43, 1, 0, 0, 1, 9, 0, 0, "d", 0)  &amp;&amp;--òèòë äîêóìåíò#
	.ProcCheck(42, 1, 0, 0, 10, 9, 0, 0, "d", 0) &amp;&amp;--ïîðÿäêîâûé íîìåð äîêóìåíòà
	.ProcCheck(31, 1, 0, 0, 1, 10, 0, 0, "d", 0) &amp;&amp;--òèòë ÏÔÏ#
	.ProcCheck(30, 1, 0, 0, 10, 10, 0, 0, "d", 0)&amp;&amp;--íîìåð ÊÊÌ
	.ProcCheck(52, 1, 0, 0, 23, 10, 0, 0, "d", 0)&amp;&amp;--íàçâàíèå äîêóìåíòà
	.ProcCheck(35, 1, 0, 0, 1, 11, 0, 0, "d", 0) &amp;&amp;--òèòë îïåðàòîð
	.ProcCheck(34, 1, 0, 0, 10, 11, 0, 0, "d", 0)&amp;&amp;--êîä îïåðàòîðà
	.ProcCheck(36, 1, 0, 0, 15, 12, 0, 0, "d", 0)&amp;&amp;--èìÿ îïåðàòîðà
	.ProcCheck(39, 1, 0, 0, 1, 13, 0, 0, "d", 0) &amp;&amp;--òèòë äàòà
	.ProcCheck(38, 1, 0, 0, 10, 13, 0, 0, "d", 0)&amp;&amp;--äàòà
	.ProcCheck(41, 1, 0, 0, 1, 14, 0, 0, "d", 0) &amp;&amp;--òèòë âðåìÿ
	.ProcCheck(40, 1, 0, 0, 10, 14, 0, 0, "d", 0)&amp;&amp;--âðåìÿ

	*------------------------------------------------------------
	* Èòîãî
	.ProcCheck(81, 1, 0, 0, 1, 16, 0, 0, "d", 0)       &amp;&amp;--òèòë èòîãî
	.ProcCheck(79, 1, 0, 0, 15, 16, 0, 0, .mstr(.Summ), 2) &amp;&amp;--ñóììà
	.ProcCheck(102, 1, 0, 0, 15, 17, 0, 0, "", 1)      &amp;&amp;--çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà

	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checkdiscount
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------


ENDPROC
PROCEDURE checksalereturn
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*------------------------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

* Ôîðìèðîâàíèå ñòðîêè ïðîäàæè
LOCAL ;
	lcPlu, ;
	lcName, ;
	lyPrice, ;
	lnQty, ;
	lyAmt, ;
	lyDsc, ;
	lcDpt, ;
	lnDec, ;
	lnLine
	
*------------------------------------------------------------

WITH THIS
	lcPlu   = [????]
	lnQty   = tnQnt
	lcName  = ALLTRIM(tcTvrNM)
	lyPrice = tyPrice
	lcDpt   = [1] &amp;&amp;ALLTRIM(depart)
	lyDsc   = tyVatRate
	
	*------------------------------------------------------------
	* ôîðìèòðóåì øòðèõ-êîäà òîâàðà
	lcPlu = PADL(lcPlu,13,[#])+[#  ]
	.PrintText(lcPlu)	&amp;&amp; øòðèõ-êîä òîâàðà (îáÿçàòåëüíûé ïàðàìåòð)

	*------------------------------------------------------------
	* îòäåë
	lcDpt = [# ]+PADR(lcDpt, 6)+CHR(10)
	.PrintText(lcDpt)  &amp;&amp; êîä îòäåëà (íåîáÿçàòåëüíûé ïàðàìåòð)

	*------------------------------------------------------------
	* ôîðìèðóåì ñòðîêó âîçâðàòà
	.PrintText(PADR(ALLTRIM(STR(lnQty,7,3)),7)+[X]) &amp;&amp; êîëè÷åñòâî òîâàðà
	.PrintText(PADR(.mstr(lyPrice),11)+[=]) &amp;&amp; öåíà åäèíèöû òîâàðà
	.PrintText(STR(lyPrice*lnQty,20,2)+CHR(10)) &amp;&amp; ñóììà íà òîâàð
	.PrintText(SPACE(7)+LEFT(lcName,20)+CHR(10)) &amp;&amp; êîä òîâàðà(òåêñò)

	*------------------------------------------------------------
	.SummCheck = .SummCheck + lyPrice*lnQty
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************


ENDPROC
PROCEDURE checksalestorno
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

* ñòîðíèðîâàíèå ïîçèöèè ïðîäàæè
LOCAL ;
	lnPlu, ;
	lcName, ;
	lyPrice, ;
	lnQty, ;
	lyAmt, ;
	lyDsc, ;
	lcDpt, ;
	lnDec, ;
	lnLine
	
*------------------------------------------------------------
WITH THIS
	lnPlu   = [???]
	lnQty   = tnQnt
	lcName  = tcTvrNM
	lyPrice = tyPrice
	lcDpt   = [1] &amp;&amp;ALLTRIM(depart)
	lyDsc   = tyVatRate

	IF lyDsc # 0
		lyPrice = lyPrice - lyPrice*lyDsc
	ENDIF
	
	lnLine = 10

	.Pos   = .Pos + 1   &amp;&amp; ñ÷åò÷èê ïîçèöèé

	*------------------------------------------------------------
	* ÍÀ×ÀËÎ ÁËÎÊÀ ÒÎÂÀÐÎÂ
	.ProcCheckEx(10, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, lnLine, 0, 0, .Pos, 12)  &amp;&amp;--ïîðÿäêîâûé íîìåð òîâàðà èëè óñëóãè
	.ProcCheck (15, 1, 0, 0, 1, lnLine, 0, 0, lcName, 1 ) &amp;&amp;--íàçâàíèå òîâàðà

	*------------------------------------------------------------
	* Ââîä Øòðèõ-êîäà òîâàðà
	lnPlu = PADL(lnPlu,13,'#')+'#'
	.ProcCheck(12, 1, 0, 0, 1, lnLine, 0, 0, lnPlu, 1)&amp;&amp;--øòðèõ-êîä òîâàðà (îáÿçàòåëüíûé ïàðàìåòð)

	*------------------------------------------------------------
	* Ââîä îòäåëà
	lcDpt = PADR(lcDpt, 6)
	.ProcCheck (13, 1, 0, 0, 1, lnLine, 0, 0, lcDpt, 1)  &amp;&amp;--êîä îòäåëà (íåîáÿçàòåëüíûé ïàðàìåòð)

	
	*------------------------------------------------------------
	* Ôîðìèðîâàíèå ñòðîêè ñòîðíèðîâàíèÿ
	lnDec = IIF((lnQty-ROUND(lnQty,0))#0,0,1) &amp;&amp; 0 - äðîáíîå êîë-âî      1 - öåëîå êîë-âî
	DO CASE
		CASE lnDec = 0 &amp;&amp; äðîáíîå êîëè÷åñòâî òîâàðà
			lcQtyPart = ALLTRIM(STR(BITAND(lnQty*1000, 65535))) &amp;&amp;--ìëàäøèå 2 ðàçðÿäà êîëè÷åñòâî òîâàðà0
			.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, lcQtyPart, 14)
			lcQtyPart = ALLTRIM(STR(BITAND(BITRSHIFT(lnQty*1000,16), 65535))) &amp;&amp;--ñòàðøèå 2 ðàçðÿäà êîëè÷åñòâî òîâàðà
			.ProcCheck (19, 1, 0, 0, 1, lnLine, 0, 0, lcQtyPart, 14)
		CASE lnDec = 1
			.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, ALLTRIM(STR(lnQty)), 14) &amp;&amp;--êîëè÷åñòâî òîâàðà
	ENDCASE
	
	.ProcCheck (21, 1, 0, 0, 12, lnLine, 0, 0, .mstr(lyPrice), 2) &amp;&amp;--öåíà åäèíèöû òîâàðà

	*------------------------------------------------------------
	* Âû÷èñëåíèå ñóììû
	lyAmt = lyPrice*lnQty
	.ProcCheck (67, 1, 0, 0, 25, lnLine, 0, 0, .mstr(lyAmt), 2) &amp;&amp;--ñóììà (çàêðûâàåò áëîê îïèñàíèÿ òîâàðà)

	*------------------------------------------------------------
	.SummCheck = .SummCheck - lyAmt

	ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksaletran
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:49 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
WITH This

*17.03.2008 22:42 -&gt;Ïðîâåðÿåì ñîñòîÿíèå ÊÊÌ
IF NOT .InitSession(1)
	RETURN
ENDIF
*------------------------------------------------------------------------------
WAIT WINDOW 'Ïå÷àòàåì '+ALLTRIM(tcTvrNM)+' ...' NOWAIT
*02.10.2007 21:57 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè ïðîäàæè
* mbs_RecItem(ansitooem(ALLTRIM(tcTvrNM)),'46474849',ansitooem('Îòäåë'),1,1,1,0,0,'qewq')
.ErrorCode = !mbs_RecItem(ansitooem(ALLTRIM(tcTvrNM)),'',ansitooem(''),INT(tnQnt*ROUND(MTON(tyPrice),2)*100),INT(tnQnt),INT(ROUND(MTON(tyPrice),2)*100),0,0,'')
IF .ErrorCode &amp;&amp;&lt;&gt; 0
	.SetErrorCode()
ELSE
	.SummCheck = .SummCheck + ROUND(tyPrice,2)*ROUND(tnQnt,3)
ENDIF
*------------------------------------------------------------------------------
ENDWITH
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE checkstart
*
LOCAL ;
	ldToday

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled AND THIS.makecheck
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
DECLARE  mbs_head IN MoebiusLib.dll INTEGER , INTEGER , STRING
	mbs_head(1,0,'0')
CLEAR DLLS mbs_head
	.makecheck = .t.
	IF .ErrFlag
		.SummCheck = 0
		.DscCheckPerc = 0
		.Pos	   = 0
		.ErrFlag   = .F.
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closecheck
LPARAMETERS	lyCheckSumm1, lyCheckSumm2, lyCheckSumm3, lyCheckSumm4
WITH this
.Summ= lyCheckSumm1

IF PCOUNT()&gt;1
	.Summa2 = lyCheckSumm2
ENDIF
IF PCOUNT()&gt;2
	.Summa3 = lyCheckSumm3
ENDIF
IF PCOUNT()&gt;3
	.Summa4 = lyCheckSumm4
ENDIF

* Çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà
LOCAL ;
	lnLine, ;
	lnChange, ;
	lnDscCheck,;
	CardPay[32*16],;
	CreditPay[32*16],;
	Str1, ;
	Str2
STORE 0 TO CardPay,CreditPay

**Str1='123456789'+PADR('0000135434',21)+CHR(0)+CHR(1)+REPLICATE(CHR(0),32*15)
Str1=REPLICATE(CHR(0),32*32)
Str2=REPLICATE(CHR(0),32*32)

*------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
DECLARE mbs_tot IN MoebiusLib.dll INTEGER ,INTEGER , INTEGER ,STRING @ , STRING @ , STRING, INTEGER , INTEGER
*.errorcode = IIF(mbs_tot(MTON(.SummCheck*100), 0, 0, Str1, Str2, ansitooem('Ñïàñèáî çà ...'), 0, 1),0,1)
.errorcode = IIF(mbs_tot(INT(MTON(.SummCheck*100)),INT(MTON(lyCheckSumm1-.SummCheck)*100), INT(lyCheckSumm1*100), Str1, Str2, ansitooem('Ñïàñèáî çà ...'), 0, 1),0,1)
*.errorcode = IIF(mbs_tot(1,0, 1, Str1, Str2, ansitooem('Ñïàñèáî çà ...'), 124, 1),0,1)
CLEAR DLLS mbs_tot
ENDWITH

RETURN





lnLine   = 10

WITH THIS
	*------------------------------------------------------------
	* ñêèäêà íà ÷åê
	lnDscCheck = .SummCheck*.DscCheckPerc
	
	.ProcCheckEx (10, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, lnLine, 0, 0, 0, 12)
	.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, 1, 12)
	.ProcCheck (21, 1, 0, 0, 12, lnLine, 0, 0, .mstr(.SummCheck), 2)
	.ProcCheck (67, 1, 0, 0, 25, lnLine, 0, 0, .mstr(.SummCheck), 2)
	
	*------------------------------------------------------------
	* ÑÊÈÄÊÀ
	IF .DscCheckPerc # 0
		.ProcCheck (26, 1, 0, 0, 1, lnLine, 0, 0, .mstr(lnDscCheck), 2) &amp;&amp;--ñóììà ñêèäêè
		.SummCheck = .SummCheck - lnDscCheck
		.ProcCheck (71, 1, 0, 0, 25, lnLine, 0, 0, .mstr(.SummCheck), 2) &amp;&amp;--÷àñòíûé èòîã ê ïîñëåäíåìó òîâàðó
	ENDIF

	*------------------------------------------------------------
	* Ïðîìåæóò èòîã
	.ProcCheck (77, 1, 0, 0, 1, lnLine, 0, 0, "d", 0) &amp;&amp;--òèòë ÏÐÎÌÅÆÓÒÎ×ÍÛÉ ÈÒÎÃ
	.ProcCheck (75, 1, 0, 0, 15, lnLine, 0, 0, .mstr(.SummCheck), 2) &amp;&amp;--ñóììà ïðîìåæóòî÷íîãî èòîãà

	*------------------------------------------------------------
	* Èòîãî
	.ProcCheck (81, 1, 0, 0, 1, lnLine, 0, 0, "d", 0) &amp;&amp;-- òèòë ÈÒÎÃÎ
	.ProcCheck (79, 1, 0, 0, 15, lnLine, 0, 0, .mstr(.SummCheck), 2) &amp;&amp;--èòîã ïî ÷åêó

	*------------------------------------------------------------
	* Ïðèíÿòî äåíåã (èòîãîâàÿ ñóììà)
	IF .Summ = 0
		.Summ = .SummCheck
	ENDIF

	.ProcCheck (85, 1, 0, 0, 1, lnLine, 0, 0, "d", 0) &amp;&amp;--òèòë ÎÏËÀÒÀ
	.ProcCheck (83, 1, 0, 0, 15, lnLine, 0, 0, .mstr(.Summ), 2) &amp;&amp;--ñóììà îïëàòû

	*	îïëàòà ïî êðåäèòíîé êàðòå
	*!*		.ProcCheck (9, 1, 0, 0, 1, lnLine, 0, 0, "d", 0) &amp;&amp;--òèòë ÎÏËÀÒÀ
	*!*		.ProcCheck (8, 1, 0, 0, 1, lnLine, 0, 0, [1234567890], 2) &amp;&amp;--òèòë ÎÏËÀÒÀ
	*!*		.ProcCheck (89, 1, 0, 0, 1, lnLine, 0, 0, "d", 0) &amp;&amp;--òèòë ÎÏËÀÒÀ
	*!*		.ProcCheck (87, 1, 0, 0, 15, lnLine, 0, 0, .mstr(1000), 2) &amp;&amp;--òèòë ÎÏËÀÒÀ
	
	*------------------------------------------------------------
	* Ñäà÷à
	lnChange = 0
	IF .Summ &lt;&gt; .SummCheck
		lnChange = .Summ - .SummCheck
	ENDIF
	IF lnChange &lt;&gt; 0
		.ProcCheck(97, 1, 0, 0, 1, lnLine, 0, 0, "d", 0) &amp;&amp;--òèòë ÑÄÀ×À
		.ProcCheck(95, 1, 0, 0, 15, lnLine, 0, 0, .mstr(lnChange), 2) &amp;&amp;--ñóììà ñäà÷è
	ENDIF
	*
	.ProcCheck(44, 1, 0, 0, 15, lnLine, 0, 0, "148", 12) &amp;&amp;-- ëè÷íûé íîìåð âåäîìîñòè
	.ProcCheck(45, 1, 0, 0, 15, lnLine, 0, 0, 10, 12) &amp;&amp;-- íîìåð êàññû

	*.ProcCheckEx(112, 1, 0, 0, 0, 64, 1, 0, 0, 0, 1, lnLine, 0, 0, [100], 2)

	*------------------------------------------------------------
	MName = ""
	MName = MName +"***************************************"+chr(10)
	MName = MName +"********* Ñïàñèáî çà ïîêóïêó***********"+chr(10)
	MName = MName +"***************************************"+chr(10)

	lnLine = 13
	.ProcCheck (102, 1, 0, 0, 15, lnLine, 0, 0, MName, 1) &amp;&amp;--êîíåö äîêóìåíòà

	*------------------------------------------------------------
	.ErrFlag = .F.
	.lCheckOpen =.F.
	.pos = 0
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closeole
* çàêðûòèå OLE-äðàéâåðà
DECLARE moebius_uninit IN MoebiusLib.dll
moebius_uninit()
CLEAR DLLS
RETURN

WITH THIS.drv
	.CloseVD()
	THIS.drv = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closeshift
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
this.reportz()
RETURN
*------------------------------------------------------------------------------
WITH THIS
	.drv.oCloseShift(.convertdate(DATETIME()))
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************

ENDPROC
PROCEDURE continueprint
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------


ENDPROC
PROCEDURE convertdate
* Ïðåîáðàçîâàíèå ñòàíäàðòíîé äàòû â äàòó ïîíÿòíóþ OLE äðàéâåðó
LPARAMETER tdNowDateTime

LOCAL lcNowDateime

lcNowDateTime = ALLTRIM(STR(YEAR(tdNowDateTime))) ;
					+PADL(ALLTRIM(STR(MONTH(tdNowDateTime))),2,'0') ;
					+PADL(ALLTRIM(STR(DAY(tdNowDateTime))),2,'0') ;
+PADL(ALLTRIM(STR(HOUR(tdNowDateTime))),2,'0') ;
+PADL(ALLTRIM(STR(MINUTE(tdNowDateTime))),2,'0');
+PADL(ALLTRIM(STR(SEC(tdNowDateTime))),2,'0')

RETURN lcNowDateTime
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cutcheck
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------


ENDPROC
PROCEDURE Destroy
* Çàêðûâàåì OLE ñåðâåðà
THIS.closeOle()
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Error
*
LPARAMETERS nError, cMethod, nLine

WITH THIS
	IF TYPE([.drv])#[O]
		MESSAGEBOX([Íå çàãðóæåí OLE-äðàéâåð],48,[Îøèáêà äðàéâåðà ÊÊÌ Ìåáèóñ])
	ELSE
		IF .drv.mbError # 0
			=MESSAGEBOX(.ErrorCodeDescription(.drv.mbError),48,[Îøèáêà äðàéâåðà ÊÊÌ Ìåáèóñ])
			.ErrorCode = .drv.mbError
			IF !INLIST(.ErrorCode,1020, 1040)
				.CloseOle()
				.Open()
			ENDIF	
		ELSE
			MESSAGEBOX([Îøèáêà # ]+ALLTRIM(STR(nError))+[ â ìåòîäå ]+cMethod+[ ñòðîêà ]+ ;
									ALLTRIM(STR(nLine)),48,[Îøèáêà äðàéâåðà ÊÊÌ Ìåáèóñ])
		ENDIF
	ENDIF	

	.SummCheck = 0
	.DscCheckPerc = 0
	.Pos	   = 0
	.ErrFlag   = .T.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD   ***************************************
************************************************************************************************
ENDPROC
PROCEDURE errorcodedescription
* Îïèñàíèå êîäà îøèáêè
LPARAMETER ;
	lnError

*------------------------------------------------------------
IF TYPE([lnError]) # [N]
	RETURN []
ENDIF

DO CASE
	CASE lnError = 1001
		RETURN [Òàéìàóò ââîäà-âûâîäà]
	CASE lnError = 1010
		RETURN [Íåâåðíàÿ äëèíà ñòðîêè ñ äàòîé]
	CASE lnError = 1020
		RETURN [Îøèáêà ïðè îòêðûòèè ïîðòà]
	CASE lnError = 1030
		RETURN [Îøèáêà ïðè çàêðûòèè ïîðòà]
	CASE lnError = 1040
		RETURN [Ïîðò íå áûë îòêðûò]
	CASE lnError = 1050
		RETURN [Íåâåðíàÿ äëèíà èìåíè îïåðàòîðà]
	CASE lnError = 1060
		RETURN [Íåâåðíûé íîìåð ÊÊÌ]
	CASE lnError = 1070
		RETURN [Íåâåðíàÿ äëèíà çàãîëîâêà]
	CASE lnError = 1080
		RETURN [Íåâåðíàÿ äëèíà íîâîãî ïàðîëÿ]
	CASE lnError = 1090
		RETURN [Ôóíêöèÿ íå ïîääåðæèâàåòñÿ]
	CASE lnError = 1095
		RETURN [Òèï äàííûõ íå ïîääåðæèâàåòñÿ]
	CASE lnError = 1097
		RETURN [Îøèáêà âûäåëåíèÿ ïàìÿòè]
	CASE lnError = 1098
		RETURN [Íåâåðíàÿ äëèíà ïàðîëÿ èíñïåêòîðà]
	CASE lnError = 1099
		RETURN [Íåâåðíàÿ äëèíà ïàðîëÿ]
	CASE lnError = 1093
		RETURN [Íåâåðíàÿ äëèíà áëîêà èíôîðìàöèè î ÊÊÌ]
	CASE lnError = 1092
		RETURN [Íåâåðíàÿ êîíòðîëüíàÿ ñóììà ÊÊÌ-èíôî]
	CASE lnError = 1111
		RETURN [Ïðèíòåð íå ãîòîâ]
	CASE lnError = 1
		RETURN [ÔÏ ID îøèáêà]
	CASE lnError = 2
		RETURN [ÔÏ çàïèñü îøèáêà]
	CASE lnError = 3
		RETURN [Ôèñêàëüíàÿ îøèáêà. Îáðàòèòåñü ê ðàçðàáîò÷èêó]
	CASE lnError = 4
		RETURN [ÔÏ íå ïóñòà]
	CASE lnError = 5
		RETURN [Äàííûå â ÔÏ ðàçðóøåíû]
	CASE lnError = 6
		RETURN [Êîìàíäà â ðåæèìå ïðèíòåðà èãíîðèðóåòñÿ]
	CASE lnError = 7
		RETURN [Íåò êîäà îïåðàòîðà]
	CASE lnError = 8
		RETURN [Íåò òèïà äîêóìåíòà]
	CASE lnError = 9
		RETURN [Íåñîâïàäåíèå çàâîäñêîãî íîìåðà ÏÔÏ/ÊÊÌ]
	CASE lnError = 10
		RETURN [Îøèáêà ïàðîëÿ]
	CASE lnError = 11
		RETURN [Îøèáêà äàòà/âðåìÿ]
	CASE lnError = 12
		RETURN [Çàâîä. ðåã. ðàíåå]
	CASE lnError = 13
		RETURN [Ñåðèéíûé íîìåð ÊÊÌ ðàçðóøåí]
	CASE lnError = 14
		RETURN [Ôèñêàëèçàöèÿ ðàíåå]
	CASE lnError = 15
		RETURN [ÊÊÌ ðàáîòàåò â íå ôèñêàëüíîì ðåæèìå]
	CASE lnError = 16
		RETURN [Äàííûå Ôèñêàëèçàöèè ÊÊÌ ðàçðóøåíû]
	CASE lnError = 17
		RETURN [Ïåðåðåãèñòðàöèè ÊÊÌ èñ÷åðïàíû]
	CASE lnError = 18
		RETURN [Äàííûå ïåðåðåãèñòðàöèè ÊÊÌ ðàçðóøåíû]
	CASE lnError = 19
		RETURN [Ñìåíà îòêðûòà]
	CASE lnError = 20
		RETURN [Ñìåíà íå áûëà îòêðûòà]
	CASE lnError = 21
		RETURN [Ìíîãî òîâàðà â ÷åêå]
	CASE lnError = 22
		RETURN [Äàííûå çàêðûòèÿ ñìåíû â ÔÏ ðàçðóøåíû]
	CASE lnError = 23
		RETURN [Íåâåðíûé Ôîðìàò äîêóìåíòà]
	CASE lnError = 24
		RETURN [Ïåðåçàïèñü òåêñòà]
	CASE lnError = 25
		RETURN [Ìíîãî ïàðàìåòðîâðîâ äîêóìåíòà]
	CASE lnError = 26
		RETURN [Íåäîïóñòèìûé ïàðàìåòð äîêóìåíòà]
	CASE lnError = 27
		RETURN [Íåäîïóñòèìîå çíà÷åíèå ïàðàìåòðà]
	CASE lnError = 28
		RETURN [Íåñóùåñòâóþùèé îáúåêò]
	CASE lnError = 29
		RETURN [Äîêóìåíò íå áûë çàâåðøåí]
	CASE lnError = 30
		RETURN [Îïèñàíèå òîâàðà/îïåðàöèè íå ïîëíî]
	CASE lnError = 31
		RETURN [Íåñîîòâåòñòâèè êîíòðîëüíîé ñóììû ïàêåòà]
	CASE lnError = 32
		RETURN [Ïðèíòåð íå ãîòîâ]
	CASE lnError = 33
		RETURN [Âëîæåííûå ïðåðûâàíèÿ]
	CASE lnError = 34
		RETURN [Íåâåðíûé áàéò ïîäòâåðæäåíèÿ ïðèåìà äàííûõ]
	CASE lnError = 35
		RETURN [Ïåðåïîëíåíèå ÔÏ]
	CASE lnError = 36
		RETURN [Íåèçâåñòíàÿ êîìàíäà]
	CASE lnError = 37
		RETURN [CRC ÎÇÓ]
	CASE lnError = 38
		RETURN [CRC ÔÏ]
	CASE lnError = 39
		RETURN [Ïîðò äàííûõ íåèñïðàâåí]
	CASE lnError = 40
		RETURN [Íåâåðíûé ïîðÿäîê ðåêâèçèòîâ ÷åêà]
	CASE lnError = 41
		RETURN [Íóëåâûå êîîðäèíàòû äëÿ îáÿçàòåëüíîãî ðåêâèçèòà]
	CASE lnError = 42
		RETURN [Íåäîïóñòèìàÿ äëèíà çàïðîñà]
	CASE lnError = 43
		RETURN [Ðàçðÿäíîñòü ÷èñëà áîëüøå äîïóñòèìîé]
	CASE lnError = 44
		RETURN [Ïåðåïîëíåíèå]
	CASE lnError = 45
		RETURN [Íåò ÷èñëà]
	CASE lnError = 46
		RETURN [Íåò îòâåòà]
	CASE lnError = 47
		RETURN [Îøèáêà ïåðåäà÷è]
	CASE lnError = 48
		RETURN [Ìàò. ïåðåïîëíåíèå]
	CASE lnError = 49
		RETURN [Íåò áóìàãè...]
	CASE lnError = 50
		RETURN [ÊÊÌ íå ãîòîâà!!!]
	CASE lnError = 51
		RETURN [Ñáîé ïàìÿòè!!!]
	CASE lnError = 52
		RETURN [Ïðèíòåð âûêëþ÷åí]
	CASE lnError = 53
		RETURN [Íå äîñòàòî÷íî ïàìÿòè]
	CASE lnError = 54
		RETURN [Äëèíà íîìåðà ìåíüøå]
	CASE lnError = 55
		RETURN [Íóëåâàÿ äëèíà íîìåðà]
	CASE lnError = 56
		RETURN [Äëèíà ïàðîëÿ ìåíüøå]
	CASE lnError = 57
		RETURN [Íóëåâàÿ äëèíà ïàðîëÿ]
	CASE lnError = 58
		RETURN [Íå äîïóñòèìàÿ âåëè÷èíà]
	CASE lnError = 59
		RETURN [Ïðåâûøåí òàéì-àóò]
	OTHERWISE
		RETURN [Íåèçâåñòíàÿ îøèáêà]
ENDCASE
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE feeddocument
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
THIS.PrintText(CHR(13)+CHR(10))
*------------------------------------------------------------------------------

ENDPROC
PROCEDURE getecradvancedmode
RETURN 0
ENDPROC
PROCEDURE getecradvancedmodedescription
RETURN 0
ENDPROC
PROCEDURE getecrmode
RETURN 0
ENDPROC
PROCEDURE getecrmodedescription
RETURN []
ENDPROC
PROCEDURE getgeneraldata
* V - îò÷åò
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	.drv.oGetGeneralData()
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE getoperationreg
RETURN 0
ENDPROC
PROCEDURE info
* Îòîáðàæåíèå îêíà èíôîðìàöèè
WITH THIS
	.drv.ShowKKMInfo()
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Init
LOCAL ;
	lnCom, ;
	lnBaudRate, ;
	lcPassTrans, ;
	llLibLoad,;
	lcIniFileName

*------------------------------------------------------------
lcIniFileName = FULLPATH([KKM.INI])
* ïðî÷èòàåì ïàðàìåòðû ÊÊÌ èç INI-ôàéëà



lnAllowVAT = VAL(oRes.GetParam([KKM],[VAT],lcIniFileName)) &amp;&amp; ïå÷àòü ÍÄÑ
THIS.AllowVAT = lnAllowVAT # 0
***

THIS.lEnabled = (VAL(oRes.GetParam([KKM],[ENABLED],lcIniFileName)) = 1) &amp;&amp; ðàçðåøåíèå ðàáîòû ÔÐ
***

lnCutEnabled = VAL(oRes.GetParam([CHECK],[CUT_ENABLED],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
THIS.CutEnabled = (lnCutEnabled = 1)
***

lnCutType = VAL(oRes.GetParam([CHECK],[CUT_TYPE],lcIniFileName)) &amp;&amp; òèï îáðåçêè ÷åêà (0-íåïîëíûé/1-ïîëíûé)
THIS.CutType = (lnCutType = 0)
***


lnCom = VAL(oRes.GetParam([KKM],[COM],lcIniFileName))	&amp;&amp; íîìåð COM-ïîðòà
lnBaudRate = VAL(oRes.GetParam([KKM],[BAUDRATE],lcIniFileName)) &amp;&amp; ñêîðîñòü ïåðåäà÷è äàííûõ
lcPassTrans = ALLTRIM(oRes.GetParam([KKM],[PASS],lcIniFileName)) &amp;&amp; ïàðîëü íà ïåðåäà÷ó äàííûõ
*------------------------------------------------------------
CLEAR DLLS
*!*		DECLARE moebius_init IN MoebiusLib.dll SHORT, INTEGER, STRING, STRING
*!*		DECLARE moebius_uninit IN MoebiusLib.dll
*!*		DECLARE INTEGER KkmGetShiftInfo IN MoebiusLib.dll
*!*		DECLARE INTEGER KkmGetShiftData IN MoebiusLib.dll INTEGER
		DECLARE INTEGER moebius_send IN MoebiusLib.dll INTEGER , STRING, INTEGER
*!*		DECLARE  mbs_head IN MoebiusLib.dll INTEGER , INTEGER , STRING
		DECLARE  mbs_RecItem IN MoebiusLib.dll STRING, STRING, STRING, INTEGER ,INTEGER , INTEGER , INTEGER , INTEGER , STRING
*!*		DECLARE mbs_tot IN MoebiusLib.dll INTEGER ,INTEGER , INTEGER ,STRING @ , STRING @ , STRING, INTEGER , INTEGER
*!*		DECLARE KkmGetKKMInfo IN MoebiusLib.dll STRING , INTEGER


** mbs_tot(int Total, int Chg, int Cash, PaymentSt CardPay[], PaymentSt CreditPay[], char* TrLn, DWORD RecNum, DWORD PosID)
*mbs_RecItem(ALLTRIM(tcTvrNM),'øòðèõ-êîä','Îòäåë',1,1,1,0,0,'')

**mbs_RecItem (char *pGoodsName, char *pBarCode, char *pDepNumber, int AllPrice, int Quantity, int UnitPrice, DWORD VatInfo, BOOL fWeight, char *pUnitName="")
**mbs_pos(int pos, char* pGoodsName, char* pBarCode, char* pDepNumber, char* pUnitName, int AllPrice, int Quantity, int UnitPrice, DWORD VatInfo, BOOL fVoid, BOOL fWeight, BOOL fSubtotal=FALSE)
WAIT WINDOW '... çàãðóæàåì êàññó1' TIMEOUT 1


* Èíèöèàëèçàöèÿ ïîðòà ñâÿçè
WITH THIS
	.ComPort = lnCom
	.BaudRate = lnBaudRate
	.Password = lcPassTrans
	.nameoperator=spUserClt(1)
	.IDOperator = 1 &amp;&amp;oApp.UserKod
	.Open()
	WAIT WINDOW '... çàãðóæàåì êàññó2' TIMEOUT 2

ENDWITH
**SET STEP ON
RETURN .t.

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE initsession
LPARAMETERS tnDocType

*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
WITH This

*02.10.2007 22:41 -&gt;îòêðûâàåì ñìåíó
* çäåñü áûëî áû íåïëîõî ñäåëàòü ïðîâåðêó ñòàòóñà ñìåíû
* IF .drv.oGetShiftState() = 0
*	.OpenShift()
*	IF .ErrorCode &lt;&gt; 0
*		.SetErrorCode()
*		RETURN .F.
*	ENDIF
* ENDIF

WAIT WINDOW 'Îòêðûâàåì íîâûé ÷åê ...' NOWAIT
IF NOT .lCheckOpen
	.CheckStart()
	.lCheckOpen = .T.
ENDIF
*------------------------------------------------------------------------------
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE mstr
* Ïðåîáðàçîâàíèå ÷èñëà â ñòðîêó ôîðìàòà "ñóììà"
LPARAMETER ;
	tnReadValue

LOCAL ;
	lcReturnValue

*------------------------------------------------------------
lcReturnValue = ALLTRIM(STR(tnReadValue,100,2))

RETURN lcReturnValue
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE newoperator
* ðåãèñòðàöèÿ íîâîãî îïåðàòîðà â ÊÊÌ
LPARAMETER ;
	tnIDOperator, ;		&amp;&amp; èäåíòèôèêàòîð îïåðàòîðà
	tcNameOperator, ;	&amp;&amp; èìÿ îïåðàòîðà
	tlEmpty

*------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

IF TYPE([tnIDOperator])#[N] AND !BETWEEN(tnIDOperator,1,256)
	RETURN .F.
ENDIF

IF TYPE([tcNameOperator])#[C]
	RETURN .F.
ENDIF

WITH THIS.drv
	.oAddOperator(tnIdOperator,tcNameOperator)
	THIS.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE nullcheck
* àííóëèðîâàíèå
LOCAL ;
	lcDate

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
	lcDate = .convertdate(datetime())
	.BeginCheck(lcDate, 3, 1, 0, 0, 0)
	.ProcCheck(1, 1, 0, 0, 6, 1, 0, 0, "----------------------------", 1)  &amp;&amp;--ðàçäåëèòåëü
	.ProcCheck(28, 1, 0, 0, 1, 2, 0, 0, "1;3;0;0;1;4;0;0;1;5;0;0;1;6;0;0", 3)  &amp;&amp;--íàçâàíèå ïðåäïðèÿòèÿ
	.ProcCheck(1, 1, 0, 0, 1, 7, 0, 0, "--------------------------------------", 1) &amp;&amp;--ðàçäåëèòåëü

	.ProcCheck(111, 1, 0, 0, 1, 8, 0, 0, "d", 0) &amp;&amp;--ÈÍÍ
	.ProcCheck(43, 1, 0, 0, 1, 9, 0, 0, "d", 0)  &amp;&amp;--òèòë äîêóìåíò
	.ProcCheck(42, 1, 0, 0, 10, 9, 0, 0, "d", 0) &amp;&amp;--ïîðÿäêîâûé íîìåð äîêóìåíòà
	.ProcCheck(31, 1, 0, 0, 1, 10, 0, 0, "d", 0) &amp;&amp;--òèòë ÏÔÏ#
	.ProcCheck(30, 1, 0, 0, 10, 10, 0, 0, "d", 0)&amp;&amp;--íîìåð ÊÊÌ
	.ProcCheck(52, 1, 0, 0, 23, 10, 0, 0, "d", 0)&amp;&amp;--íàçâàíèå äîêóìåíòà
	.ProcCheck(35, 1, 0, 0, 1, 11, 0, 0, "d", 0) &amp;&amp;--òèòë îïåðàòîð
	.ProcCheck(34, 1, 0, 0, 10, 11, 0, 0, "d", 0)&amp;&amp;--êîä îïåðàòîðà
	.ProcCheck(36, 1, 0, 0, 15, 12, 0, 0, "d", 0)&amp;&amp;--èìÿ îïåðàòîðà
	.ProcCheck(39, 1, 0, 0, 1, 13, 0, 0, "d", 0) &amp;&amp;--òèòë äàòà
	.ProcCheck(38, 1, 0, 0, 10, 13, 0, 0, "d", 0)&amp;&amp;--äàòà
	.ProcCheck(41, 1, 0, 0, 1, 14, 0, 0, "d", 0) &amp;&amp;--òèòë âðåìÿ
	.ProcCheck(40, 1, 0, 0, 10, 14, 0, 0, "d", 0)&amp;&amp;--âðåìÿ
	
	*------------------------------------------------------------
	* Èòîãî
	.ProcCheck(81, 1, 0, 0, 1, 16, 0, 0, "d", 0)    &amp;&amp;--òèòë èòîãî
	.ProcCheck(79, 1, 0, 0, 15, 16, 0, 0, "200", 2) &amp;&amp;--ñóììà
	.ProcCheck(102, 1, 0, 0, 15, 17, 0, 0, "", 1)   &amp;&amp;--çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà

	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE open
WITH THIS
	SET STEP ON
DECLARE moebius_init IN MoebiusLib.dll SHORT, INTEGER, STRING, STRING
IF moebius_init(.ComPort,.BaudRate,'','')
		DECLARE KkmGetKKMInfo IN MoebiusLib.dll STRING , INTEGER
	LOCAL lKkmGetKKMInfo
	lKkmGetKKMInfo   = SPACE(100)
	KkmGetKKMInfo(lKkmGetKKMInfo,0)
	CLEAR DLLS KkmGetKKMInfo
	ELSE
	    .ErrorCode = 900
ENDIF
CLEAR DLLS moebius_init
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE opendrawer
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	.ErrorCode = 0
	.drv.oOpenDrawer()
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************


ENDPROC
PROCEDURE openshift
* Îòêðûòèå ñìåíû
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
**KkmGetShiftData
LOCAL ShiftInfo
DECLARE INTEGER KkmGetShiftInfo IN MoebiusLib.dll
IF INLIST(KkmGetShiftInfo(),-17,20) &amp;&amp; ñìåíà çàêðûòà
	LOCAL str1
	SET DATE TO YMD
	SET MARK TO '/'
	str1 = TTOC(DATETIME())
	SET DATE TO GERMAN
	SET MARK TO '.'
	str1 = "8" + Chr(28) + str1 + Chr(28) + ALLTRIM(Str(this.IDOperator,10,0)) + Chr(28) + ALLTRIM(this.NameOperator)
	str1 = ansitooem(str1)
	rez =  moebius_send(0,str1,LEN(str1))
ENDIF
CLEAR DLLS KkmGetShiftInfo
RETURN

WITH THIS
	.ErrorCode = 0
	.drv.KkmOpenShift(DATETIME(),.IDOperator,.NameOperator)
	.drv.oOpenShift(.convertdate(DATETIME()),.IDOperator,.NameOperator,0)
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printheader
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------


ENDPROC
PROCEDURE printsalecheck
* ïå÷àòü ÷åêà ïðîäàæè off-line
WITH THIS
	*------------------------------------------------------------
	* ïå÷àòàåì çàãîëîâîê ÷åêà
	.CheckStart()

	*-----------------------------------------------------------
	* ôîðìèðóåì ïîçèöèè ïðîäàæè
	GO TOP
	DO WHILE (!EOF() AND (.ErrorCode = 0))
		.SalePos()
		SKIP
	ENDDO

	*------------------------------------------------------------
	* çàêàí÷èâàåì ôîðìèðîâàíèå ÷åêà
	IF .ErrorCode = 0
		.Summ = .SummCheck
		.CloseCheck()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printstring
* âûâîä ñòðîêè â íåôèñêàëüíîì ðåæèìå
LPARAMETER ;
	tcStringForPrinting
	
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*-----------------------------------------------------------------------------------------------	
THIS.PrintText(tcStringForPrinting+CHR(10))
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printtext
* Âûâîä òåêñòà â íåôèñêàëüíîì ðåæèìå
LPARAMETER ;
	tcText

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
	IF !.ErrFlag
		.drv.oPrintText(tcText)
		RETURN .ErrFlag
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE proccheck
*
LPARAMETER IDProc, OrigFl, SPFl, BufX, CTX, CTY, LDX, LDY, PrValue1, ValueType

*------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	IF !.ErrFlag
		.drv.oProcCheck(IDProc, OrigFl, SPFl, BufX, CTX, CTY, LDX, LDY, PrValue1, ValueType)
	ENDIF	
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE proccheckex
*
LPARAMETER IDProc, OrigFl, SPFl, BufX, ;
		   Ext1, Ext2, Ext3, Ext4, Ext5, Ext6, ;
		   CTX, CTY, LDX, LDY, PrValue1, ValueType

*------------------------------------------------------------
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	IF !.ErrFlag
		.drv.oProcCheckEx(IDProc, OrigFl, SPFl, BufX, Ext1, Ext2, Ext3, Ext4, ;
				Ext5, Ext6, CTX, CTY, LDX, LDY, PrValue1, ValueType)
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE ready
*
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	.drv.oIsPrinterReady()
	IF .ErrFlag
		.ErrFlag = .F.
		RETURN -1
	ELSE
		.ErrFlag = .F.
		RETURN 0
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE regoperator
* ðåãèñòðàöèÿ îïåðàòîðà
LPARAMETER ;
	tnID, ;
	tcNameOper

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
	IF .Ready() = 0
		*------------------------------------------------------------
		* óñòàíîâêà èäåíòèôèêàòîðîâ íîâîãî îïåðàòîðà
		IF TYPE([tnID]) = [N] AND BETWEEN(tnID, 1, 256)
			.IdOperator = tnID
		ELSE
			.ErrorCode = 901
			RETURN .F.
		ENDIF
	
		IF TYPE([tcNameOper]) = [C]
			.NameOperator = tcNameOper
		ELSE
			.ErrorCode = 901
			RETURN .F.
		ENDIF

		*------------------------------------------------------------	
		* ðåãèñòðàöèÿ
		.SetPassword()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE release
RELEASE THIS

ENDPROC
PROCEDURE reportx
* X - îò÷åò
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

LOCAL ShiftInfo
ShiftInfo = KkmGetShiftInfo()
	IF INLIST(ShiftInfo,20,-17)
		this.openshift
		MESSAGEBOX('Ñìåíà îòêðûòà',0+64,'Îòêðûòèå ñìåíû')
	ENDIF
DO CASE
	CASE ShiftInfo =0
		DECLARE INTEGER KkmGetShiftData IN MoebiusLib.dll INTEGER
		rez =  KkmGetShiftData(0)
		CLEAR dlls KkmGetShiftData
	OTHERWISE
ENDCASE


RETURN

LOCAL x
WITH THIS
	.openshift()
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE reportz
* Çàêðûòèå ñìåíû
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*!*	DECLARE moebius_init IN MoebiusLib.dll SHORT, INTEGER, STRING, STRING
*!*	? moebius_init(6,57600,'','')
SET MARK TO '/'
SET date TO YMD
str1 = TTOC(DATETIME())
SET MARK TO '.'
SET DATE TO GERMAN
str1 = "9" + Chr(28) + str1 + Chr(28) + '0'
rez =  moebius_send(0,str1,LEN(str1))

RETURN
WITH THIS
	.drv.oCloseShift(.convertdate(DATETIME()))
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE returncheck
* ôîðìèðîâàíèå äîêóìåíòà âîçâðàòà
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	LOCAL lcKKM
	lcKKM = []
	IF !.ErrFlag
		.drv.FillInTheInf()
		lcKKM = .drv.infKKMNumber
	ENDIF

	*------------------------------------------------------------
	* ïå÷àòü çàãîëîâêà ÷åêà
	.PrintText(REPLICATE([*],40)+CHR(10))
	.PrintText([Êàññèð # ]+STR(.IdOperator,3)+CHR(10))
	.PrintText(SPACE(15)+[ÂÎÇÂÐÀÒ]+CHR(10))

	*------------------------------------------------------------
	* ôîðìèðóåì ïîçèöèè âîçâðàòà
	GO TOP
	DO WHILE (!EOF() AND (.ErrorCode = 0))
		.ReturnSalePos()
		SKIP
	ENDDO
	
	*------------------------------------------------------------
	* çàâåðøåíèå ïå÷àòè ÷åêà
	.PrintText(SPACE(9)+REPLICATE([-],30)+CHR(10))
	.PrintText(SPACE(9)+[ÈÒÎÃÎ:]+STR(.SummCheck,25,2)+CHR(10))
	.PrintText([ÊÊÌ # ]+lcKKM+CHR(10))
	.PrintText([Äàòà ]+DTOC(DATE())+[ ]+[Âðåìÿ ]+LEFT(TIME(),5)+CHR(10))
	.PrintText(REPLICATE([*],40)+REPLICATE(CHR(10),3))
	
	*------------------------------------------------------------
	* ïå÷àòü ôèñêàëüíîãî ÷åêà âîçâðàòà
	.SimpleReturnCheck()

	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE returnsalepos
* Ôîðìèðîâàíèå ñòðîêè ïðîäàæè
LOCAL ;
	lcPlu, ;
	lcName, ;
	lyPrice, ;
	lnQty, ;
	lyAmt, ;
	lyDsc, ;
	lcDpt, ;
	lnDec, ;
	lnLine
	
*------------------------------------------------------------

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	lcPlu   = ALLTRIM(STR(kod_tov))
	lnQty   = snal
	lcName  = ALLTRIM(name_tov)
	lyPrice = price
	lcDpt   = [1] &amp;&amp;ALLTRIM(depart)
	lyDsc   = disc
	
	*------------------------------------------------------------
	* ôîðìèòðóåì øòðèõ-êîäà òîâàðà
	lcPlu = PADL(lcPlu,13,[#])+[#  ]
	.PrintText(lcPlu)	&amp;&amp; øòðèõ-êîä òîâàðà (îáÿçàòåëüíûé ïàðàìåòð)

	*------------------------------------------------------------
	* îòäåë
	lcDpt = [# ]+PADR(lcDpt, 6)+CHR(10)
	.PrintText(lcDpt)  &amp;&amp; êîä îòäåëà (íåîáÿçàòåëüíûé ïàðàìåòð)

	*------------------------------------------------------------
	* ôîðìèðóåì ñòðîêó âîçâðàòà
	.PrintText(PADR(ALLTRIM(STR(lnQty,7,3)),7)+[X]) &amp;&amp; êîëè÷åñòâî òîâàðà
	.PrintText(PADR(.mstr(lyPrice),11)+[=]) &amp;&amp; öåíà åäèíèöû òîâàðà
	.PrintText(STR(lyPrice*lnQty,20,2)+CHR(10)) &amp;&amp; ñóììà íà òîâàð
	.PrintText(SPACE(7)+LEFT(lcName,20)+CHR(10)) &amp;&amp; êîä òîâàðà(òåêñò)

	*------------------------------------------------------------
	.SummCheck = .SummCheck + lyPrice*lnQty
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE salepos
LPARAMETERS  tcTvrNM,lnQty,lyPrice,tyVatRate
* Ôîðìèðîâàíèå ñòðîêè ïðîäàæè
LOCAL ;
	lcPlu, ;
	lcName, ;
	lyAmt, ;
	lyDsc, ;
	lcDpt, ;
	lnDec, ;
	lnLine, ;
	lcQtyPart
	
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
	lcPlu   = ALLTRIM(STR(kod_tov))
	lcName  = ALLTRIM(tcTvrNM)
	lcDpt   = [1] &amp;&amp;ALLTRIM(depart)
	lyDsc   = disc

	nLine = 10

	Pos   = .Pos + 1   &amp;&amp; ñ÷åò÷èê

	*------------------------------------------------------------
	* ÍÀ×ÀËÎ ÁËÎÊÀ ÒÎÂÀÐÎÂ
	.ProcCheck (10, 1, 0, 0, 1, lnLine, 0, 0, .Pos, 12)  &amp;&amp;--ïîðÿäêîâûé íîìåð òîâàðà èëè óñëóãè
	.ProcCheck (15, 1, 0, 0, 1, lnLine, 0, 0, lcName, 1 ) &amp;&amp;--íàçâàíèå òîâàðà

*!*		*------------------------------------------------------------
*!*		* Ââîä Øòðèõ-êîäà òîâàðà
*!*		lcPlu = PADL(lcPlu,13,'#')+'#'
*!*		.ProcCheck(12, 1, 0, 0, 1, lnLine, 0, 0, lcPlu, 1)&amp;&amp;--øòðèõ-êîä òîâàðà (îáÿçàòåëüíûé ïàðàìåòð)

*!*		*------------------------------------------------------------
*!*		* Ââîä îòäåëà
*!*		lcDpt = PADR(lcDpt, 6)
*!*		.ProcCheck (13, 1, 0, 0, 1, lnLine, 0, 0, lcDpt, 1)  &amp;&amp;--êîä îòäåëà (íåîáÿçàòåëüíûé ïàðàìåòð)

*!*		*------------------------------------------------------------
	* Ôîðìèðîâàíèå ñòðîêè ïðîäàæè
	lnDec = IIF((lnQty-ROUND(lnQty,0))#0,0,1) &amp;&amp; 0 - äðîáíîå êîë-âî      1 - öåëîå êîë-âî
	DO CASE
		CASE lnDec = 0 &amp;&amp; äðîáíîå êîëè÷åñòâî òîâàðà
			lcQtyPart = ALLTRIM(STR(BITAND(lnQty*1000, 65535))) &amp;&amp;--ìëàäøèå 2 ðàçðÿäà êîëè÷åñòâî òîâàðà0
			.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, lcQtyPart, 14)
			lcQtyPart = ALLTRIM(STR(BITAND(BITRSHIFT(lnQty*1000,16), 65535))) &amp;&amp;--ñòàðøèå 2 ðàçðÿäà êîëè÷åñòâî òîâàðà
			.ProcCheck (19, 1, 0, 0, 1, lnLine, 0, 0, lcQtyPart, 14)
		CASE lnDec = 1
			.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, ALLTRIM(STR(lnQty)), 14) &amp;&amp;--êîëè÷åñòâî òîâàðà
	ENDCASE
	
	.ProcCheck (21, 1, 0, 0, 12, lnLine, 0, 0, .mstr(lyPrice), 2) &amp;&amp;--öåíà åäèíèöû òîâàðà

	*------------------------------------------------------------
	* Âû÷èñëåíèå ñóììû
	lyAmt = lyPrice*lnQty
	.ProcCheck (67, 1, 0, 0, 25, lnLine, 0, 0, .mstr(lyAmt), 2) &amp;&amp;--ñóììà (çàêðûâàåò áëîê îïèñàíèÿ òîâàðà)

	*------------------------------------------------------------
	* ÑÊÈÄÊÀ ÍÀ ÒÎÂÀÐ
	IF lyDsc # 0
		.ProcCheck(26, 1, 0, 0, 1, lnLine, 0, 0, .mstr(lyDsc), 2)
		lyAmt = lyAmt - lyDsc
		.ProcCheck(71, 1, 0, 0, 25, lnLine, 0, 0, .mstr(lyAmt), 2)
	ENDIF

	*------------------------------------------------------------
	.SummCheck = .SummCheck + lyAmt

	ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE salestorno
* ñòîðíèðîâàíèå ïîçèöèè ïðîäàæè
LOCAL ;
	lnPlu, ;
	lcName, ;
	lyPrice, ;
	lnQty, ;
	lyAmt, ;
	lyDsc, ;
	lcDpt, ;
	lnDec, ;
	lnLine
	
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
	lnPlu   = ALLTRIM(STR(kod_tov))
	lnQty   = snal
	lcName  = name_tov
	lyPrice = price
	lcDpt   = [1] &amp;&amp;ALLTRIM(depart)
	lyDsc   = disk

	IF lyDsc # 0
		lyPrice = lyPrice - lyPrice*lyDsc
	ENDIF
	
	lnLine = 10

	.Pos   = .Pos + 1   &amp;&amp; ñ÷åò÷èê ïîçèöèé

	*------------------------------------------------------------
	* ÍÀ×ÀËÎ ÁËÎÊÀ ÒÎÂÀÐÎÂ
	.ProcCheckEx(10, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, lnLine, 0, 0, .Pos, 12)  &amp;&amp;--ïîðÿäêîâûé íîìåð òîâàðà èëè óñëóãè
	.ProcCheck (15, 1, 0, 0, 1, lnLine, 0, 0, lcName, 1 ) &amp;&amp;--íàçâàíèå òîâàðà

	*------------------------------------------------------------
	* Ââîä Øòðèõ-êîäà òîâàðà
	lnPlu = PADL(lnPlu,13,'#')+'#'
	.ProcCheck(12, 1, 0, 0, 1, lnLine, 0, 0, lnPlu, 1)&amp;&amp;--øòðèõ-êîä òîâàðà (îáÿçàòåëüíûé ïàðàìåòð)

	*------------------------------------------------------------
	* Ââîä îòäåëà
	lcDpt = PADR(lcDpt, 6)
	.ProcCheck (13, 1, 0, 0, 1, lnLine, 0, 0, lcDpt, 1)  &amp;&amp;--êîä îòäåëà (íåîáÿçàòåëüíûé ïàðàìåòð)

	
	*------------------------------------------------------------
	* Ôîðìèðîâàíèå ñòðîêè ñòîðíèðîâàíèÿ
	lnDec = IIF((lnQty-ROUND(lnQty,0))#0,0,1) &amp;&amp; 0 - äðîáíîå êîë-âî      1 - öåëîå êîë-âî
	DO CASE
		CASE lnDec = 0 &amp;&amp; äðîáíîå êîëè÷åñòâî òîâàðà
			lcQtyPart = ALLTRIM(STR(BITAND(lnQty*1000, 65535))) &amp;&amp;--ìëàäøèå 2 ðàçðÿäà êîëè÷åñòâî òîâàðà0
			.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, lcQtyPart, 14)
			lcQtyPart = ALLTRIM(STR(BITAND(BITRSHIFT(lnQty*1000,16), 65535))) &amp;&amp;--ñòàðøèå 2 ðàçðÿäà êîëè÷åñòâî òîâàðà
			.ProcCheck (19, 1, 0, 0, 1, lnLine, 0, 0, lcQtyPart, 14)
		CASE lnDec = 1
			.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, ALLTRIM(STR(lnQty)), 14) &amp;&amp;--êîëè÷åñòâî òîâàðà
	ENDCASE
	
	.ProcCheck (21, 1, 0, 0, 12, lnLine, 0, 0, .mstr(lyPrice), 2) &amp;&amp;--öåíà åäèíèöû òîâàðà

	*------------------------------------------------------------
	* Âû÷èñëåíèå ñóììû
	lyAmt = lyPrice*lnQty
	.ProcCheck (67, 1, 0, 0, 25, lnLine, 0, 0, .mstr(lyAmt), 2) &amp;&amp;--ñóììà (çàêðûâàåò áëîê îïèñàíèÿ òîâàðà)

	*------------------------------------------------------------
	.SummCheck = .SummCheck - lyAmt

	ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE setallowerrormsgflag
LPARAMETERS tlAllowErrorMsg

This.lAllowErrorMsg = tlAllowErrorMsg
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE seterrorcode
*18.04.2006 09:44 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
this.ErrorCode = 1
RETURN


WITH This

*02.10.2007 21:28 -&gt;óñòàíîâêà êîäà îøèáêè
IF .ErrorCode &lt;&gt; 0
	MESSAGEBOX(.ErrorCodeDescription(.drv.mbError),48,[Îøèáêà äðàéâåðà ÊÊÌ ÑÏÀÐÊ])
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE setpassword
* Èçìåíåíèå ïàðîëÿ èëè îïåðàòîðà
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH THIS
	.drv.SetPassword(.Password, .IDOperator)
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE simplereturncheck
* Ôîðìèðîâàíèå ÷åêà âîçâðàòà
LOCAL ;
	lcDate, ;
	lcAlias
	
LOCAL ARRAY ;
	laSumm[1]

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
	lcAlias = ALIAS()
	SELECT SUM(snal*price) FROM (lcAlias) INTO ARRAY laSumm[1]
	.Summ = laSumm[1]

	*------------------------------------------------------------
	* çàãîëîâîê ÷åêà
	lcDate = .convertdate(datetime())
	.BeginCheck(lcDate, 4, 1, 0, 0, 0)
	.ProcCheck(1, 1, 0, 0, 6, 1, 0, 0, [----------------------------], 1)  &amp;&amp; ðàçäåëèòåëü
	.ProcCheck(28, 1, 0, 0, 1, 2, 0, 0, "1;3;0;0;1;4;0;0;1;5;0;0;1;6;0;0", 3)  &amp;&amp; íàçâàíèå ïðåäïðèÿòèÿ
	.ProcCheck(1, 1, 0, 0, 1, 5, 0, 0, [--------------------------------], 1) &amp;&amp; ðàçäåëèòåëü

	.ProcCheck(111, 1, 0, 0, 1, 7, 0, 0, "d", 0) &amp;&amp; ÈÍÍ
	.ProcCheck(43, 1, 0, 0, 1, 8, 0, 0, "d", 0)  &amp;&amp; òèòë äîêóìåíò#
	.ProcCheck(42, 1, 0, 0, 10, 8, 0, 0, "d", 0) &amp;&amp; ïîðÿäêîâûé íîìåð äîêóìåíòà
	.ProcCheck(31, 1, 0, 0, 1, 9, 0, 0, "d", 0) &amp;&amp; òèòë ÏÔÏ#
	.ProcCheck(30, 1, 0, 0, 10, 9, 0, 0, "d", 0)&amp;&amp; íîìåð ÊÊÌ
	.ProcCheck(52, 1, 0, 0, 23, 9, 0, 0, "d", 0)&amp;&amp; íàçâàíèå äîêóìåíòà
	.ProcCheck(35, 1, 0, 0, 1, 10, 0, 0, "d", 0) &amp;&amp; òèòë îïåðàòîð
	.ProcCheck(34, 1, 0, 0, 10, 10, 0, 0, "d", 0)&amp;&amp; êîä îïåðàòîðà
	.ProcCheck(36, 1, 0, 0, 15, 10, 0, 0, "d", 0)&amp;&amp; èìÿ îïåðàòîðà
	.ProcCheck(39, 1, 0, 0, 1, 12, 0, 0, "d", 0) &amp;&amp; òèòë äàòà
	.ProcCheck(38, 1, 0, 0, 10, 12, 0, 0, "d", 0)&amp;&amp; äàòà
	.ProcCheck(41, 1, 0, 0, 1, 13, 0, 0, "d", 0) &amp;&amp; òèòë âðåìÿ
	.ProcCheck(40, 1, 0, 0, 10, 13, 0, 0, "d", 0)&amp;&amp; âðåìÿ

	*------------------------------------------------------------
	* Èòîãî
	.ProcCheck(81, 1, 0, 0, 1, 15, 0, 0, "d", 0)  &amp;&amp; òèòë èòîãî
	.ProcCheck(79, 1, 0, 0, 15, 15, 0, 0, .mstr(.Summ), 2) &amp;&amp; ñóììà
	.ProcCheck(102, 1, 0, 0, 15, 16, 0, 0, "", 1)      &amp;&amp; çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà

	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE simplesalecheck
* Ôîðìèðîâàíèå ÷åêà âîçâðàòà
LOCAL ;
	lcDate, ;
	lcAlias, ;
	ldDpt
	
LOCAL ARRAY ;
	laSumm(1)

*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*------------------------------------------------------------
WITH THIS
	lcAlias = ALIAS()
	SELECT SUM(snal*price) AS CSumm FROM (lcAlias) INTO ARRAY laSumm
	.Summ = laSumm[1]

	lcDpt   = [1] &amp;&amp;ALLTRIM(depart)

	.CheckStart()

	lnLine = 10
	*------------------------------------------------------------
	* ÍÀ×ÀËÎ ÁËÎÊÀ ÒÎÂÀÐÎÂ
	.ProcCheck (10, 1, 0, 0, 1, lnLine, 0, 0, 1, 12)  &amp;&amp;--ïîðÿäêîâûé íîìåð òîâàðà èëè óñëóãè
	.ProcCheck (15, 1, 0, 0, 1, lnLine, 0, 0, REPLICATE([_],20), 1 ) &amp;&amp;--íàçâàíèå òîâàðà

	*------------------------------------------------------------
	* Îòäåë
	.ProcCheck(12, 1, 0, 0, 1, lnLine, 0, 0, PADL([Îòäåë ]+lcDpt,13,[ ]), 1)

	*------------------------------------------------------------
	.ProcCheck (13, 1, 0, 0, 1, lnLine, 0, 0, SPACE(6), 1)

	*------------------------------------------------------------
	* Ôîðìèðîâàíèå ñòðîêè ïðîäàæè
	.ProcCheck (18, 1, 0, 0, 1, lnLine, 0, 0, 1, 14) &amp;&amp;--êîëè÷åñòâî òîâàðà
	.ProcCheck (21, 1, 0, 0, 12, lnLine, 0, 0, .mstr(laSumm[1]), 2) &amp;&amp;--öåíà åäèíèöû òîâàðà

	*------------------------------------------------------------
	* Âû÷èñëåíèå ñóììû
	.ProcCheck (67, 1, 0, 0, 25, lnLine, 0, 0, .mstr(laSumm[1]), 2) &amp;&amp;--ñóììà (çàêðûâàåò áëîê îïèñàíèÿ òîâàðà)

	.SummCheck = laSumm[1]
	*------------------------------------------------------------
	* Çàâåðøåíèå ïå÷àòè ÷åêà
	.CloseCheck()
		
	.ErrFlag = .F.
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE writetable
*19.02.2008 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------


ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3>version Âåðñèÿ ïðîãðàììû
copyright Ïðàâà íà èñïîëüçîâàíèå
password Ïàðîëü  ïîäêëþ÷åíèÿ
comport Ïîðò, ÷åðåç êîòîðûé ïðîèñõîäèò ïîäêëþ÷åíèå
idoperator Íîìåð îïåðàòîðà
baudrate Ñêîðîñòü îáìåíà
summcheck ñóììà ïî ÷åêó
pos êîëè÷åñòâî ïîçèöèé ÷åêà
errflag ôëàã îøèáêè OLE
dsccheckperc ïðîöåíò ñêèäêè ïî ÷åêó
drv äðàéâåð
drvname èìÿ äðàéâåðà
errorcode
summ
kkm íàçâàíèå ÊÊÌ
timeout
nameoperator ôàìèëèÿ îïåðàòîðà
lenabled ðàçðåøåíèå ðàáîòû ñ ÔÐ
headerfile Ôàéë ñ çàãîëîâêîì ÷åêà
opened ïðèçíàê îòêðûòîãî ïîðòà ñâÿçè
allowvat Ïå÷àòàòü ñâåäåíèÿ îá ÍÄÑ â ÷åêå
cutenabled Ðàçðåøèòü îòðåçêó ÷åêà
cuttype Òèï òðåçêè ÷åêà
makecheck Ñòàòóñ: ÷åê ãîòîâèòñÿ
lcheckopen
summa2
summa3
summa4
*openshift Îòêðûòèå ñìåíû
*closeole Çàêðûòèå OLE ñåðâåðà
*convertdate Ïåðåîáðàçîâàíèå äàòû
*mstr 
*getgeneraldata Z-îò÷åò
*setpassword ñìåíà ïàðîëÿ èëè îïåðàòîðà
*proccheck 
*begincheck ôîðìèðîâàíèå íà÷àëà äîêóìåíòà
*proccheckex 
*checkstart íà÷àëî ôîðìèðîâàíèÿ ÷åêà
*info èíôîðìàöèÿ î ÊÊÌ
*printtext âûâîä òåêñòà â íåôèñêàëüíîì ðåæèìå
*open èíèöèàëèçàöèÿ äðàéâåðà, óñòàíîâêà ñâÿçè
*salepos ïå÷àòü ïîçèöèè ïðîäàæè
*closecheck çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà
*reportx îò÷åò áåç ãàøåíèÿ
*reportz îò÷åò ñ ãàøåíèåì
*regoperator ðåãèñòðàöèÿ îïåðàòîðà
*printsalecheck ïå÷àòü ÷åêà ïðîäàæè
*cancelcheck àííóëèðîâàíèå
*salestorno 
*errorcodedescription îïèñàíèå êîäà îøèáêè
*cashincome âíåñåíèå â êàññó
*cashoutcome âûïëàòà èç êàññû
*returncheck ÷åê âîçâðàòà
*nullcheck ÷åê àííóëèðîâàíèÿ
*returnsalepos âîçâðàò ïî ïîçèöèè
*printstring ïå÷àòü ñòðîêè
*newoperator ðåãèñòðàöèÿ â ÊÊÌ íîâîãî îïåðàòîðà
*ready ãîòîâíîñòü ïðèíòåðà
*simplesalecheck ïå÷àòü ÷åêà ïðîäàæè íà ñóììó
*simplereturncheck ïå÷àòü ÷åêà âîçâðàòà áåç ïîçèöèé
*checkdiscount ñêèäêà íà ÷åê
*checksalereturn Ïîçèöèÿ âîçâðàòà
*checksalestorno Ñòîðíèðîâàíèå ïîçèöèè
*checksaletran Ïðîäàæà
*closeshift Çàêðûòèå ñìåíû
*continueprint Ïðîäëîæèòü ïå÷àòü
*cutcheck Îòðåçêà ÷åêà
*feeddocument Ïðîãîíêà áóìàãè
*opendrawer Îòêðûòèå äåíåæíîãî ÿùèêà
*printheader Ïå÷àòü çàãîëîâêà ÷åêà
*seterrorcode 
*writetable 
*initsession Ïðîâåðÿåì ñîñòîÿíèå ÊÊÌ (îòêðûòà ëè ñìåíà)
*getecradvancedmode 
*getecradvancedmodedescription 
*getecrmode 
*getecrmodedescription 
*getecrstatus 
*getoperationreg 
*setallowerrormsgflag 
*release Releases a FormSet or Form from memory.
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7>Äðàéâåð äëÿ Ìåáèóñà</reserved7>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>mebis</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1340M8QPA</uniqueid>
		<timestamp>949395873</timestamp>
		<class>custom</class>
		<classloc/>
		<baseclass>custom</baseclass>
		<objname>nofisc</objname>
		<parent/>
		<properties>summcheck = 0
summ = 0
headerfile = 
errorcode = 0
Name = "nofisc"
</properties>
		<protected>drv
errflag
summcheck
headerfile
simplepos
summpos
</protected>
		<methods>PROCEDURE checkstart
*
LPARAMETER ;
	tnCheck, ;		&amp;&amp; íîìåð ÷åêà
	tñTypeCheck		&amp;&amp; òèï ÷åêà

LOCAL ;
	lcTmpString, ;
	lnHeaderFile
	
*------------------------------------------------------------
WITH THIS
	.SummCheck = 0

	*------------------------------------------------------------
	* âûâîä çàãîëîâêà ÷åêà èç ôàéëà
	IF !EMPTY(.HeaderFile) AND FILE(.HeaderFile)
		lnHeaderFile = FOPEN(.HeaderFile)
		IF lnHeaderFile &gt; 0
			DO WHILE !FEOF(lnHeaderFile)
				lcTmpFile = ALLTRIM(FGETS(lnHeaderFile))
				IF !EMPTY(lcTmpFile)
					.PrintString(lcTmpFile)
				ENDIF
			ENDDO
			FCLOSE(lnHeaderFile)
		ENDIF
	ENDIF
	
	lcTmpString = [Äàòà: ]+DTOC(DATE())+[ Âðåìÿ: ]+LEFT(TIME(),5)
	.PrintString(lcTmpString)

	lcTmpString = [Êàññèð ]+.drv.NameOperator+SPACE(3)+[×åê # ]+ALLTRIM(STR(tnCheck))
	.PrintString(lcTmpString)

	.PrintString([.]+SPACE(12)+UPPER(ALLTRIM(tñTypeCheck)))
	
	.ErrorCode = .drv.ErrorCode
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closecheck
* çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà
WITH THIS
	.PrintString(REPLICATE([=],36))
	.PrintString([   Èòîãî    : ]+STR(.SummCheck,24,2))
	.PrintString([   Íàëè÷íûìè: ]+STR(.Summ,24,2))
	IF .Summ-.SummCheck &gt; 0
		.PrintString([       Ñäà÷à: ]+STR(.Summ-.SummCheck,24,2))
	ENDIF
	.PrintString([ ])
	.PrintString([ ])
	.PrintString([ ])

	.ErrorCode = .drv.ErrorCode
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE errorcodedescription
*
RETURN THIS.drv.ErrorCodeDescription
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Init
*
LPARAMETER ;
	tcIniFileName

LOCAL ;
	lcTypeKKM, ;
	llLibLoad

*------------------------------------------------------------
* ïðî÷èòàåì òèï ÊÊÌ èç INI-ôàéëà
IF TYPE([loRes])#[O]
	IF !([GENERAL_V1.VCX]$SET([CLASSLIB]))
		SET CLASSLIB TO GENERAL_V1.VCX ALIAS GEN ADDITIVE
		llLibLoad = .T.
	ELSE
		llLibLoad = .F.	
	ENDIF
	loRes = CREATEOBJECT([RESOURCE],lcIniFileName)
	IF llLibLoad
		RELEASE CLASSLIB ALIAS GEN
	ENDIF
ENDIF

*------------------------------------------------------------
* óçíàåì òèï ÊÊÌ
lcTypeKKM = UPPER(ALLTRIM(loRes.GetParam([KKM],[TYPE])))
DO CASE
	CASE lcTypeKKM == [ÌÅÁÈÓÑ]
		lcTypeKKM = [mebis]
	CASE lcTypeKKM == [ØÒÐÈÕ]
		lcTypeKKM = [shtrih]
ENDCASE
THIS.HeaderFile = UPPER(ALLTRIM(loRes.GetParam([KKM],[HEADER])))

*-----------------------------------------------------------
* çàãðóçèì äðàéâåð ÊÊÌ
IF !([MEBIS.VCX]$SET([CLASSLIB]))
	SET CLASSLIB TO MEBIS.VCX ALIAS MEBIS ADDITIVE
	llLibLoad = .T.
ELSE
	llLibLoad = .F.	
ENDIF

THIS.drv = CREATEOBJECT(lcTypeKKM,tcIniFileName)

IF llLibLoad
	RELEASE CLASSLIB ALIAS MEBIS
ENDIF
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printsalecheck
* ïå÷àòü ÷åêà ïðîäàæè off-line
WITH THIS
	GO TOP
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart(kod_chk,[ÏÐÎÄÀÆÀ])

	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	SCAN FOR !.ErrFlag
		.SalePos()
	ENDSCAN

	*------------------------------------------------------------		
	* çàêðûâàåì ÷åê
	IF !.ErrFlag
		.Summ = .SummCheck
		.CloseCheck()  &amp;&amp; çàêðûâàåì ÷åê
	ENDIF

	.ErrorCode = .drv.ErrorCode
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printstring
*
LPARAMETER ;
	tcStringForPrinting

*------------------------------------------------------------
WITH THIS
	IF !.ErrFlag
		.ErrFlag = !.drv.PrintString(tcStringForPrinting)
		.ErrorCode = .drv.ErrorCode
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE ready
RETURN THIS.drv.Ready()
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE regoperator
*
LPARAMETER ;
	tnIdOperator, ;
	tcNameOperator

*------------------------------------------------------------
WITH THIS
	.drv.RegOperator(tnIdOperator,tcNameOperator)
	.ErrorCode = .drv.ErrorCode
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE returncheck
* ïå÷àòü ÷åêà âîçâðàòà off-line
WITH THIS
	GO TOP
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart(kod_chk,[ÂÎÇÂÐÀÒ])

	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	SCAN FOR !.ErrFlag
		.SalePos()
	ENDSCAN

	*------------------------------------------------------------		
	* çàêðûâàåì ÷åê
	IF !.ErrFlag
		.Summ = .SummCheck
		.CloseCheck()  &amp;&amp; çàêðûâàåì ÷åê
	ENDIF

	.ErrorCode = .drv.ErrorCode
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE salepos
* ôîðìèðîâàíèå ïîçèöèè ïðîäàæè
LOCAL ;
	llDec, ;
	lcPlu, ;
	lcName, ;
	lnQty, ;
	lyPrice, ;
	lyDsc, ;
	lnDscCard, ;
	lcDep

*------------------------------------------------------------
lcPlu = ALLTRIM(STR(kod_tov)) &amp;&amp; êîä òîâàðà
lcName = name_tov	&amp;&amp; íàçâàíèå òîâàðà
lnQty = snal		&amp;&amp; êîëè÷åñòâî òîâàðà
lyPrice = price		&amp;&amp; öåíà òîâàðà
lyDsc = disc		&amp;&amp; ñóììà ñêèäêè
lnDscCard = card	&amp;&amp; íîìåð äèñêîíòíîé êàðòû
lcDep = [1]			&amp;&amp; êîä îòäåëà

WITH THIS
	*------------------------------------------------------------
	* êîä òîâàðà è îòäåë
	.PrintString(PADL(lcPlu,13,'#')+'#   Îòäåë # '+lcDep)
	
	*------------------------------------------------------------
	* öåíà òîâàðà è íàçâàíèå
	.PrintString(PADR(ALLTRIM(STR(lnQty,7,3)),7)+[X]+ ;
				 PADR(ALLTRIM(STR(lyPrice,20,2)),11)+[=]+ ;
				 STR(lyPrice*lnQty,15,2)) &amp;&amp;--ñóììà íà òîâàð
	.PrintString(LEFT(lcName,20)) &amp;&amp;-- êîä òîâàðà(òåêñò)

	*------------------------------------------------------------
	* ñêèäêà íà òîâàð
	IF lyDsc &gt; 0
		.PrintString(SPACE(7)+[Ñêèäêà]+STR(lyDsc, 15, 2))
	ENDIF

	*------------------------------------------------------------
	.SummCheck=.SummCheck+lyPrice*lnQty-lyDsc

	.ErrorCode = .drv.ErrorCode
ENDWITH    	
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE simplepos
*
LOCAL ;
	lcDep, ;
	lcAlias
	
LOCAL ARRAY ;
	laSumm(1)
	
*------------------------------------------------------------
* âû÷èñëÿåì ñóììó ïî ÷åêó
lcDep = [01]
lcAlias = ALIAS()
SELECT SUM(price*snal) FROM (lcAlias) INTO ARRAY laSumm

WITH THIS
	.SummCheck = laSumm[1]
	*------------------------------------------------------------
	* îòäåë è ñóììà
	.PrintString(lcDep+SPACE[13]+PADL(ALLTRIM(STR(laSumm[1],20,2)),20))
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************	
ENDPROC
PROCEDURE simplereturncheck
* ïå÷àòü ÷åêà âîçâðàòà off-line
WITH THIS
	GO TOP
	
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart(kod_chk,[ÂÎÇÂÐÀÒ])
	
	*------------------------------------------------------------
	* ñòðîêà âîçâðàòà
	.SummPos()

	*------------------------------------------------------------		
	* çàêðûâàåì ÷åê
	IF !.ErrFlag
		.Summ = .SummCheck
		.CloseCheck()  &amp;&amp; çàêðûâàåì ÷åê
	ENDIF

	.ErrorCode = .drv.ErrorCode
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE simplesalecheck
* ïå÷àòü ÷åêà âîçâðàòà off-line
WITH THIS
	GO TOP
	
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart(kod_chk,[ÏÐÎÄÀÆÀ])
	
	*------------------------------------------------------------
	* ñòðîêà âîçâðàòà
	.SummPos()

	*------------------------------------------------------------		
	* çàêðûâàåì ÷åê
	IF !.ErrFlag
		.Summ = .SummCheck
		.CloseCheck()  &amp;&amp; çàêðûâàåì ÷åê
	ENDIF

	.ErrorCode = .drv.ErrorCode
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE summpos
*
LOCAL ;
	lcDep, ;
	lcAlias
	
LOCAL ARRAY ;
	laSumm[1]
	
*------------------------------------------------------------
* âû÷èñëÿåì ñóììó ïî ÷åêó
lcDep = [01]
lcAlias = ALIAS()
SELECT SUM(price*snal) FROM (lcAlias) INTO ARRAY laSumm

WITH THIS
	.SummCheck = laSumm[1]
	*------------------------------------------------------------
	* îòäåë è ñóììà
	.PrintString(lcDep+SPACE[13]+PADL(ALLTRIM(STR(laSumm[1],20,2)),20))
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************	
ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3>drv äðàéâåð ïå÷àòè
errflag ôëàã îøèáêè
summcheck ñóìà ïî ÷åêó
summ ñóììà îïëàòû
headerfile ôàéë ñ çàãîëîâêîì ÷åêà
errorcode êîä îøèáêè äðàéâåðà
*checkstart ïå÷àòü çàãîëîâêà ÷åêà
*salepos ïå÷àòü ïîçèöèè ïðîäàæè
*closecheck çàâåðøåíèå ôîðìèðîâàíèÿ ÷åêà
*printstring ïå÷àòü ñòðîêè
*printsalecheck ïå÷àòü ÷àêà ïðîäàæè
*regoperator ðåãèñòðàöèÿ îïåðàòîðà
*returncheck ïå÷àòü ÷åêà âîçâðàòà
*errorcodedescription îïèñàíèå êîäà îøèáêè äðàéâåðà
*ready ãîòîâíîñòü ïðèíòåðà
*simplesalecheck ïå÷àòü ÷åêà ïðîäàæè íà ñóììó
*simplereturncheck ïå÷àòü ÷àêà âîçâðàòà íà ñóììó
*simplepos ïå÷àòü ñòðîêè âèäà - ÎÒÄÅË  ÑÓÌÌÀ
*summpos ïîçèöèÿ íà ñóììó
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7>Äðàéâåð äëÿ íåôèñêàëüíûõ îïåðàöèé</reserved7>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>nofisc</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1270KTSSA</uniqueid>
		<timestamp>957638804</timestamp>
		<class>cst</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>custom</baseclass>
		<objname>linedisplay</objname>
		<parent/>
		<properties>lenabled = .T.
Name = "linedisplay"
</properties>
		<protected>opened
lenabled
</protected>
		<methods>PROCEDURE clear
IF !this.lenabled
	RETURN
ENDIF

LnDisp.Clear()
IF LnDisp.ResultCode &lt;&gt; 0
MessageBox("Îøèáêà Äèñïëåÿ ïîêóïàòåëÿ: " + LnDisp.ResultDescription + "! ", 16)
	LnDisp= NULL
	this.lenabled = .f.
	RETURN
ENDIF
this.lenabled = .t.


ENDPROC
PROCEDURE cleartext
IF !this.lenabled
	RETURN
ENDIF

LnDisp.ClearText()
IF LnDisp.ResultCode &lt;&gt; 0
MessageBox("Îøèáêà Äèñïëåÿ ïîêóïàòåëÿ: " + LnDisp.ResultDescription + "! ", 16)
	LnDisp= NULL
	this.lenabled = .f.
	RETURN
ENDIF
this.lenabled = .t.


ENDPROC
PROCEDURE Destroy
IF VARTYPE(LnDisp)=[O]
	LnDisp.CurrentWindow = 0
	LnDisp.ClearText()
	LnDisp.DisplayTextAT(0,0,DTOC(DATE()),0)
	LnDisp.DisplayTextAT(1,2,[Êàññà çàêðûòà],2)
	LnDisp.DeviceEnabled = .f.
ENDIF
LnDisp= NULL
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE displaytextat
LPARAMETERS tnRow,tnCol,tcText,tnAlignment
*03.11.2006 09:29 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL   lnAlignment, ;
		lcText
***

IF !this.lenabled
	RETURN
ENDIF
lnAlignment = IIF(VARTYPE(tnAlignment)==[N],tnAlignment,0)
*lcText = CPCONVERT(1251,866,ALLTRIM(tcText))
*lcText = ICASE(lnAlignment = 0,lcText,lnAlignment = 1,PADL(lcText,20-tnCol),lnAlignment = 2,PADC(lcText,20-tnCol))
*------------------------------------------------------------------------------
*03.11.2006 09:30 -&gt;Ïîêàçûâàåè ñòðîêó
LnDisp.DisplayTextAT(tnRow,tnCol,SUBSTR(tcText,1,20),tnAlignment)
IF LnDisp.ResultCode &lt;&gt; 0
MessageBox("Îøèáêà Äèñïëåÿ ïîêóïàòåëÿ: " + LnDisp.ResultDescription + "! ", 16)
	LnDisp= NULL
	this.lenabled = .f.
	RETURN
ENDIF
this.lenabled = .t.



*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************

ENDPROC
PROCEDURE Error
*
LPARAMETERS nError, cMethod, nLine
*------------------------------------------------------------
WITH THIS
	IF TYPE([LnDisp])#[O]
		MESSAGEBOX([Íå çàãðóæåí OLE-äðàéâåð],48,[Îøèáêà äðàéâåðà Àòîëë])
	ELSE
		MESSAGEBOX([Îøèáêà # ]+ALLTRIM(STR(nError))+[ â ìåòîäå ]+cMethod+[ ñòðîêà ]+ ;
						ALLTRIM(STR(nLine)),48,[Îøèáêà äðàéâåðà Àòîëë])
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Init
LOCAL   lnDeviceName
*------------------------------------------------------------------------------
lnDeviceName  = 0
*03.11.2006 09:19 -&gt;Ïîëó÷èì èìÿ óñòðîéñòâà
IF TYPE([oRes]) == [O] THEN
	lnDeviceName = VAL(ALLTRIM(oRes.GetParam([POS],[LINEDISPLAY])))
ENDIF
this.lenabled = .f.
IF lnDeviceName  = 0
	RETURN
ENDIF
IF VARTYPE(LnDisp)=[O]
	this.lenabled = .t.
	RETURN
ENDIF
Public LnDisp
LnDisp= NULL
LnDisp= CreateObject("AddIn.Line45")
LnDisp.CurrentDeviceNumber = lnDeviceName
LnDisp.DeviceEnabled = .t.
LnDisp.DestroyWindow()
LnDisp.ClearViewPorts()
LnDisp.CreateWindow (0, 0, 2, 20, 2,20)
LnDisp.AddViewPort (0, 0, 2, 20)
LnDisp.InterCharacterWait = 0
LnDisp.CursorUpdate = .f.
LnDisp.CursorColumn = 0
LnDisp.CursorRow = 0

IF LnDisp.ResultCode &lt;&gt; 0
MessageBox("Îøèáêà Äèñïëåÿ ïîêóïàòåëÿ: " + LnDisp.ResultDescription + "! ", 16)
	LnDisp= NULL
	this.lenabled = .f.
	RETURN
ENDIF
this.lenabled = .t.
*------------------------------------------------------------------------------
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printheader
*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
RETURN
LOCAL lResClose
WITH ECR
lResClose  = .PrintHeader()
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + .ResultDescription + "!", 16)
This.errorcode = 5
EndIf

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************


ENDPROC
PROCEDURE printstring
LPARAMETERS tcStringForPrinting

*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:55 -&gt;Ïå÷àòü ñòðîêè íà îñíîâíîé ëåíòå
.UseReceiptRibbon = .T.
.UseJournalRibbon = .F.
.UseSlipDocument = .F.
.Password = This.IdOperator

.StringForPrinting = ALLTRIM(tcStringForPrinting)
.PrintString()

This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE seterrorcode

LPARAMETER lnErrorCode

*18.04.2006 09:44 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:45 -&gt;óñòàíîâêà êîäà îøèáêè
IF .ResultCode # 0
	THIS.ErrorCode = lnErrorCode
	MESSAGEBOX(.ResultCodeDescription,48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE write
LPARAMETERS tnRow,tnCol,tcText,tnAlignment
this.displaytextat(tnRow,tnCol,tcText,tnAlignment)

ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3>opened ïðèçíàê îòêðûòîãî ïîðòà ñâÿçè
lenabled ðàçðåøåíèå ðàáîòû ñ äèñïëååì 
*seterrorcode óñòàíîâêà êîäà îøèáêè
*printstring ïå÷àòü ñòðîêè
*printheader Ïå÷àòü ïðèâåòñòâèÿ
*displaytextat Âûâåñòè òåêñò â íóæíûõ ìåñòàõ
*cleartext Î÷èñòèòü äèñïëåé
*clear Î÷èùàåò âåñü äèñïëåé
*write Äóáëèðóåò êîìàíäó DisplayTextAt
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7>óïðàâëåíèå äèñïëååì ïîêóïàòåëÿ ÷åðåç óíèâåðñàëüíûé äðàéâåð</reserved7>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>linedisplay</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1270KTSSA</uniqueid>
		<timestamp>975985483</timestamp>
		<class>cst</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>custom</baseclass>
		<objname>kkm_uni</objname>
		<parent/>
		<properties>Height = 18
Width = 100
idoperator = 30
summcheck = 0
comport = 1
baudrate = 2
summ = 0
dsccheckperc = 0
errorcode = 0
drvname = AddIn.DrvFR
timeout = 50
kkm = ØÒÐÈÕ-ÔÐ-Ð
headerfile = 
nameoperator = 
allowvat = .F.
cutenabled = .F.
cuttype = .T.
typechargeout = 0
drv = 
lenabled = .T.
checkopen = .F.
Name = "kkm_uni"
</properties>
		<protected>comport
baudrate
drvname
timeout
opened
headerfile
lenabled
writetable
</protected>
		<methods>PROCEDURE beep
*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
ECR.Beep()

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cancelcheck
*18.04.2006 09:52 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
LOCAL lResClose
* åñëè åñòü îòêðûòûé ÷åê, òî îòìåíÿåì åãî
If ECR.CheckState &lt;&gt; 0 Then
		 lResClose  = ECR.CancelCheck
			If lResClose  &lt;&gt; 0 Then
			        MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
				This.errorcode = 5
			        RETURN .f.
			EndIf
EndIf
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cashincome
LOCAL lnSumma

* âíåñåíèå íàëè÷íîñòè
ECR.Summ = lnSumma
If ECR.CashIncome &lt;&gt; 0 Then
This.errorcode = 5
Return
EndIf

ENDPROC
PROCEDURE cashoutcome
LOCAL lnSumma

* âûïëàòà íàëè÷íîñòè
ECR.Summ = lnSumma
If ECR.CashOutcome &lt;&gt; 0 Then
This.errorcode = 5
Return
EndIf

ENDPROC
PROCEDURE changeheader
*18.04.2006 09:41 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL   lnHeaderFile, ;
		lnLineCounter, ;
		lcHeadLine
*------------------------------------------------------------------------------

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
MESSAGEBOX('Íà ýòîï àïïàðàòå òàêàÿ âîçìîæíîñòü íå ïðåäóñìîòðåíà ...',0+64,'Ïðåäóïðåæäåíèå')
RETURN
WITH This

*18.04.2006 09:42 -&gt;çàïèñü íîâîãî çàãîëîâêà â òàáëèöó ¹4 ÊÊÌ	
IF !EMPTY(.HeaderFile) AND FILE(.HeaderFile)
	lnHeaderFile = FOPEN(.HeaderFile)
	IF lnHeaderFile &gt; 0
		lnLineCounter = 0
		DO WHILE !FEOF(lnHeaderFile) AND lnLineCounter &lt; 3 AND .drv.ResultCode = 0
			lcHeadLine = FGETS(lnHeaderFile)
			.WriteTable(4,1,4+lnLineCounter,lcHeadLine)
			lnLineCounter = lnLineCounter+1
		ENDDO
		FCLOSE(lnHeaderFile)
	ENDIF
ENDIF
.SetErrorCode(.drv.ResultCode)
*------------------------------------------------------------------------------
	
ENDWITH

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checkdiscount
LPARAMETERS	lyDiscSumm,tcDiscountComment

*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
*!*	IF TYPE([tcDiscountComment])=[C]
*!*		.StringForPrinting = tcDiscountComment
*!*	ENDIF

* ñêèäêà ñóììîé íà âåñü ÷åê
ECR.Summ = lyDiscSumm
ECR.Destination = 0
If ECR.SummDiscount &lt;&gt; 0 Then
This.errorcode = 5
Return
EndIf
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksalereturn
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
LOCAL lResClose
*------------------------------------------------------------------------------
If !this.CheckOpen &amp;&amp;ECR.CheckState = 0 Then
			*!*	    IF ECR.DeviceEnabled = .T.
			*!*	    	ECR.DeviceEnabled = .f.
			*!*	    ENDIF
			*!*		ECR.DeviceEnabled = .t.
this.CheckOpen = .t.
* ECR.CheckType = 1
* óñòàíàâëèâàåì ïàðîëü êàññèðà
	ECR.Password = THIS.IdOperator &amp;&amp; Áûëî "1"
	* âõîäèì â ðåæèì ðåãèñòðàöèè
	ECR.Mode = 1
	ECR.SetMode()
* EndIf
ENDIF
* ðåãèñòðàöèÿ ïðîäàæè
ECR.EnableCheckSumm = .t.
ECR.TextWrap = 2
ECR.Name = ALLTRIM(tcTvrNM)
ECR.Price = ROUND(tyPrice,2)
ECR.Quantity = ABS(ROUND(tnQnt,3))
ECR.Department = 1
lResClose  = ECR.Return
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
ECR.CancelCheck
This.errorcode = 5
RETURN .f.
EndIf
This.SummCheck = THIS.SummCheck + ROUND(tyPrice,2)*ROUND(tnQnt,3)

*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE checksalestorno
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:48 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

* ñòîðíî ïðåäûäóùåé ðåãèñòðàöèè
If ECR.Storno &lt;&gt; 0 Then
This.errorcode = 5
Return
EndIf

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksaletran
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
LOCAL lResClose
*------------------------------------------------------------------------------
If !this.CheckOpen &amp;&amp;ECR.CheckState = 0 Then
			*!*	    IF ECR.DeviceEnabled = .T.
			*!*	    	ECR.DeviceEnabled = .f.
			*!*	    ENDIF
			*!*		ECR.DeviceEnabled = .t.
this.CheckOpen = .t.
* ECR.CheckType = 1
* óñòàíàâëèâàåì ïàðîëü êàññèðà
	ECR.Password = THIS.IdOperator &amp;&amp; Áûëî '1'
	* âõîäèì â ðåæèì ðåãèñòðàöèè
	ECR.Mode = 1
	ECR.SetMode()
* EndIf
ENDIF
* ðåãèñòðàöèÿ ïðîäàæè
ECR.TextWrap = 2
ECR.Name = ALLTRIM(tcTvrNM)
ECR.Price = ROUND(tyPrice,2)
ECR.Quantity = ROUND(tnQnt,3)
ECR.Department = 1
lResClose  = ECR.Registration
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
ECR.CancelCheck
This.errorcode = 5
RETURN .f.
EndIf
This.SummCheck = THIS.SummCheck + ROUND(tyPrice,2)*ROUND(tnQnt,3)

*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE closecheck
LPARAMETERS	lyCheckSumm1, lyCheckSumm2, lyCheckSumm3, lyCheckSumm4
LOCAL lResClose
*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
ECR.TypeClose = 0
this.CheckOpen = .f.
** Äåíüãè, âíåñåííûå êëèåíòîì
ECR.Summ = this.summ

DO CASE
	CASE lyCheckSumm1 &gt; 0
	CASE lyCheckSumm2 &gt; 0
		  ECR.TypeClose = 1
	CASE lyCheckSumm3 &gt; 0
		  ECR.TypeClose = 2
	CASE lyCheckSumm4 &gt; 0
		  ECR.TypeClose = 3
OTHERWISE
		  ECR.TypeClose = 0
ENDCASE
lResClose = ECR.CloseCheck
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
This.errorcode = 5
ECR.CancelCheck
EndIf
			*!*	ECR.DeviceEnabled = .f.

**SET STEP ON
**ECR.CheckState
* çàêðûòèå ÷åêà
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closeshift
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

				*!*	IF ECR.DeviceEnabled = .T.
				*!*		ECR.DeviceEnabled = .f.
				*!*	ENDIF
				*!*	ECR.DeviceEnabled = .t.
LOCAL lResClose
* åñëè ñìåíà îòêðûòà ñíèìàåì Z-îò÷åò
*  If ECR.SessionOpened Then
* óñòàíàâëèâàåì ïàðîëü ñèñòåìíîãî àäìèíèñòðàòîðà ÊÊÌ
ECR.Password = "30"   &amp;&amp;THIS.IdOperator &amp;&amp;
* âõîäèì â ðåæèì îò÷åòîâ ñ ãàøåíèåì
ECR.Mode = 3
lResClose = ECR.SetMode
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
ECR.CancelCheck
RETURN .f.
EndIf
* ñíèìàåì îò÷åò
ECR.ReportType = 1
lResClose = ECR.Report
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
ECR.CancelCheck
This.errorcode = 5
RETURN .f.
EndIf
*  EndIf
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE continueprint
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
MESSAGEBOX('Íà ýòîì àïïàðàòå òàêàÿ âîçìîæíîñòü íå ïðåäóñìîòðåíà ...',0+64,'Ïðåäóïðåæäåíèå')
RETURN
*18.04.2006 09:39 -&gt; ïðîäîëæåíèå ïå÷àòè
*18.04.2006 09:39 -&gt; âûçûâàåòñÿ, åñëè â ïðîöåññå ïå÷àòè êîí÷àåòñÿ áóìàãà
WITH This.drv

This.ErrorCode = 0
.Password = THIS.IdOperator
.ContinuePrint()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD   ***************************************
************************************************************************************************
ENDPROC
PROCEDURE cutcheck
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

ECR.PartialCut()

*!*	WITH This.drv

*!*	*30.06.2005 13:03 -&gt;Ïðîâåðèì, ìîæíî ëè îòðåçàòü ÷åê
*!*	.Password = This.IdOperator
*!*	.CutType = .F.
*!*	.CutCheck()
*!*	This.SetErrorCode(.ResultCode)
*!*	*------------------------------------------------------------------------------
*!*		
*!*	ENDWITH
*!*	*------------------------------------------------------------------------------

*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE Destroy
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------


* îñâîáîæäàåì ïîðò
ECR.DeviceEnabled = .F.
If ECR.ResultCode &lt;&gt; 0 Then
		ECR = NULL
This.errorcode = 5
	    RETURN
	  ELSE
		ECR = NULL
EndIf
	
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Error
*
LPARAMETERS nError, cMethod, nLine

*------------------------------------------------------------
WITH THIS
	IF TYPE([ECR])#[O]
		MESSAGEBOX([Íå çàãðóæåí OLE-äðàéâåð],48,[Îøèáêà äðàéâåðà ÊÊÌ])
	ELSE
		MESSAGEBOX([Îøèáêà # ]+ALLTRIM(STR(nError))+[ â ìåòîäå ]+cMethod+[ ñòðîêà ]+ ;
						ALLTRIM(STR(nLine)),48,[Îøèáêà äðàéâåðà ÊÊÌ])
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE errorcodedescription
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN 0
ENDIF
*------------------------------------------------------------------------------
RETURN
RETURN This.drv.ResultCodeDescription
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE feeddocument
LPARAMETERS tnStringQuantity
IF tnStringQuantity &lt;1
RETURN
ENDIF
*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
FOR nStr = 1 TO tnStringQuantity
	this.printstring(' ')
ENDFOR
*------------------------------------------------------------------------------
RETURN
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE from_postav
	Public ECR
	ECR = CreateObject("AddIn.FprnM45")
	***************************************
	
*!*	***	íàñòðîéêà ñâîéñòâ
*!*		ECR.ShowProperties
*!*		
	
* çàíèìàåì ïîðò
ECR.DeviceEnabled = .T.
If ECR.ResultCode &lt;&gt; 0 Then
Return
EndIf

* ïîëó÷àåì ñîñòîÿíèå ÊÊÌ
If ECR.GetStatus &lt;&gt; 0 Then
Return
EndIf

* ïðîâåðÿåì íà âñÿêèé ñëó÷àé ÊÊÌ íà ôèñêàëèçèðîâàííîñòü
If ECR.Fiscal Then
If MessageBox("ÊÊÌ ôèñêàëèçèðîâàíà! Âû äåéñòâèòåëüíî õîòèòå ïðîäîëæèòü?", 32 + 4) = 7 Then
Return
EndIf
EndIf

*!*		* åñëè åñòü îòêðûòûé ÷åê, òî îòìåíÿåì åãî
*!*		  If ECR.CheckState &lt;&gt; 0 Then
*!*		    If ECR.CancelCheck &lt;&gt; 0 Then
*!*		      Return
*!*		    EndIf
*!*		  EndIf

*!*	* åñëè ñìåíà îòêðûòà ñíèìàåì Z-îò÷åò
*!*	  If ECR.SessionOpened Then
*!*	    * óñòàíàâëèâàåì ïàðîëü ñèñòåìíîãî àäìèíèñòðàòîðà ÊÊÌ
*!*	    ECR.Password = "30"
*!*	    * âõîäèì â ðåæèì îò÷åòîâ ñ ãàøåíèåì
*!*	    ECR.Mode = 3
*!*	    If ECR.SetMode &lt;&gt; 0 Then
*!*	      Return
*!*	    EndIf
*!*	    * ñíèìàåì îò÷åò
*!*	    ECR.ReportType = 1
*!*	    If ECR.Report &lt;&gt; 0 Then
*!*	      Return
*!*	    EndIf
*!*	  EndIf

*!*	* âõîäèì â ðåæèì ðåãèñòðàöèè
*!*	  * óñòàíàâëèâàåì ïàðîëü êàññèðà
*!*	  ECR.Password = "1"
*!*	  * âõîäèì â ðåæèì ðåãèñòðàöèè
*!*	  ECR.Mode = 1
*!*	  If ECR.SetMode &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

*!*	* ïðîäàæà áåç ñäà÷è
*!*	  * ðåãèñòðàöèÿ ïðîäàæè
*!*	  ECR.Name = "Ìîëîêî"
*!*	  ECR.Price = 10.45
*!*	  ECR.Quantity = 1
*!*	  ECR.Department = 2
*!*	  If ECR.Registration &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
							  * ñêèäêà ñóììîé íà ïðåäûäóùóþ ïîçèöèþ
							*!*      ECR.Percents = 10
							*!*      ECR.Destination = 1
							*!*      If ECR.PercentsDiscount &lt;&gt; 0 Then
							*!*        Return
							*!*      EndIf
* ðåãèñòðàöèÿ ïðîäàæè
*!*	  ECR.Name = "Ôàíòà"
*!*	  ECR.Price = 25
*!*	  ECR.Quantity = 5
*!*	  ECR.Department = 1
*!*	  If ECR.Registration &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
*!*	  * ñêèäêà ñóììîé íà âåñü ÷åê
*!*	  ECR.Summ = 10.4
*!*	  ECR.Destination = 0
*!*	  If ECR.SummDiscount &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
*!*	  * çàêðûòèå ÷åêà íàëè÷íûìè áåç ââîäà ïîëó÷åííîé îò êëèåíòà ñóììû
*!*	  ECR.TypeClose = 0
*!*	  If ECR.CloseCheck &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

*!*	* ïðîäàæà ñî ñäà÷åé
*!*	  * ðåãèñòðàöèÿ ïðîäàæè
*!*	  ECR.Name = "Ìîëîêî"
*!*	  ECR.Price = 10.45
*!*	  ECR.Quantity = 1
*!*	  ECR.Department = 2
*!*	  If ECR.Registration &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
* ðåãèñòðàöèÿ ïðîäàæè
*!*	  ECR.Name = "Ïåïñè-êîëà"
*!*	  ECR.Price = 25
*!*	  ECR.Quantity = 5
*!*	  ECR.Department = 1
*!*	  If ECR.Registration &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
*!*	  * ñòîðíî ïðåäûäóùåé ðåãèñòðàöèè
*!*	  If ECR.Storno &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
*!*	  * ðåãèñòðàöèÿ ïðîäàæè
*!*	  ECR.Name = "Ôàíòà"
*!*	  ECR.Price = 25
*!*	  ECR.Quantity = 5
*!*	  ECR.Department = 1
*!*	  If ECR.Registration &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
						*!*      * ñêèäêà ñóììîé íà âåñü ÷åê
						*!*      ECR.Summ = 50
						*!*      ECR.Destination = 0
						*!*      If ECR.SummDiscount &lt;&gt; 0 Then
						*!*        Return
						*!*      EndIf
* çàêðûòèå ÷åêà íàëè÷íûìè ñ ââîäîì ïîëó÷åííîé îò êëèåíòà ñóììû
*!*	  ECR.Summ = 100
*!*	  ECR.TypeClose = 0
*!*	  If ECR.Delivery &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

					*!*    * àííóëèðîâàíèå
					*!*      * ðåãèñòðàöèÿ àííóëèðîâàíèÿ
					*!*      ECR.Name = "Dirol"
					*!*      ECR.Price = 7
					*!*      ECR.Quantity = 1
					*!*      If ECR.Annulate &lt;&gt; 0 Then
					*!*        Return
					*!*      EndIf
					*!*      * ðåãèñòðàöèÿ àííóëèðîâàíèÿ
					*!*      ECR.Name = "Orbit"
					*!*      ECR.Price = 8
					*!*      ECR.Quantity = 2
					*!*      If ECR.Annulate &lt;&gt; 0 Then
					*!*        Return
					*!*      EndIf
					*!*      * çàêðûòèå ÷åêà
					*!*      ECR.TypeClose = 0
					*!*      If ECR.CloseCheck &lt;&gt; 0 Then
					*!*        Return
					*!*      EndIf

* âîçâðàò
*!*	  * ðåãèñòðàöèÿ âîçâðàòà
*!*	  ECR.Name = "Ìîëîêî"
*!*	  ECR.Price = 10.45
*!*	  ECR.Quantity = 1
*!*	  If ECR.Return &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
*!*	  * ðåãèñòðàöèÿ âîçâðàòà
*!*	  ECR.Name = "Êîëáàñà"
*!*	  ECR.Price = 99.99
*!*	  ECR.Quantity = 1.235
*!*	  If ECR.Return &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
					*!*      * ñêèäêà ñóììîé íà âåñü ÷åê
					*!*      ECR.Summ = 50
					*!*      ECR.Destination = 0
					*!*      If ECR.SummDiscount &lt;&gt; 0 Then
					*!*        Return
					*!*      EndIf
*!*	  * çàêðûòèå ÷åêà
*!*	  ECR.TypeClose = 0
*!*	  If ECR.CloseCheck &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

*!*	* âíåñåíèå íàëè÷íîñòè
*!*	  ECR.Summ = 400.5
*!*	  If ECR.CashIncome &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

*!*	* âûïëàòà íàëè÷íîñòè
*!*	  ECR.Summ = 121.34
*!*	  If ECR.CashOutcome &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

*!*	* X - îò÷åò
*!*	  * óñòàíàâëèâàåì ïàðîëü àäìèíèñòðàòîðà ÊÊÌ
*!*	***  ECR.Password = "29"
*!*	  ECR.Password = "30"
*!*	  * âõîäèì â ðåæèì îò÷åòîâ áåç ãàøåíèÿ
*!*	  ECR.Mode = 2
*!*	  If ECR.SetMode &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
*!*	  * ñíèìàåì îò÷åò
*!*	  ECR.ReportType = 2
*!*	  If ECR.Report &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

* Z - îò÷åò
* óñòàíàâëèâàåì ïàðîëü ñèñòåìíîãî àäìèíèñòðàòîðà ÊÊÌ
ECR.Password = "30"
* âõîäèì â ðåæèì îò÷åòîâ ñ ãàøåíèåì
ECR.Mode = 3
If ECR.SetMode &lt;&gt; 0 Then
Return
EndIf
* ñíèìàåì îò÷åò
ECR.ReportType = 1
If ECR.Report &lt;&gt; 0 Then
Return
EndIf

* âûõîäèì â ðåæèì âûáîðà, ÷òîáû êòî-òî ïîä ââåäåííûìè ïàðîëÿìè íå ñäåëàë ÷òî íèáóòü íåõîðîøåå
If ECR.ResetMode &lt;&gt; 0 Then
Return
EndIf

* îñâîáîæäàåì ïîðò
ECR.DeviceEnabled = .F.
If ECR.ResultCode &lt;&gt; 0 Then
Return
EndIf
	
	
ENDPROC
PROCEDURE info
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
ECR.ShowProperties

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Init
*14.04.2006 10:52 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL	lcIniFileName, ;
		lnCom, ;
		lnBaudRate, ;
		lvAllowVAT, ;
		llLibLoad, ;
		lnCutEnabled, ;
		lnCutType
***
lcIniFileName = FULLPATH([KKM.INI])
*------------------------------------------------------------
* ïðî÷èòàåì ïàðàìåòðû ÊÊÌ èç INI-ôàéëà
lnCom = VAL(oRes.GetParam([KKM],[COM],lcIniFileName))	&amp;&amp; íîìåð COM-ïîðòà
***

lnBaudRate = VAL(oRes.GetParam([KKM],[BAUDRATE],lcIniFileName)) &amp;&amp; ñêîðîñòü ïåðåäà÷è äàííûõ
THIS.HeaderFile = UPPER(ALLTRIM(oRes.GetParam([KKM],[HEADER],lcIniFileName))) &amp;&amp; èìÿ ôàéëà çàãîëîâêà
***

lnAllowVAT = VAL(oRes.GetParam([KKM],[VAT],lcIniFileName)) &amp;&amp; ïå÷àòü ÍÄÑ
THIS.AllowVAT = lnAllowVAT # 0
***

THIS.lEnabled = (VAL(oRes.GetParam([KKM],[ENABLED],lcIniFileName)) = 1) &amp;&amp; ðàçðåøåíèå ðàáîòû ÔÐ
***

lnCutEnabled = VAL(oRes.GetParam([CHECK],[CUT_ENABLED],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
THIS.CutEnabled = (lnCutEnabled = 1)
***

lnCutType = VAL(oRes.GetParam([CHECK],[CUT_TYPE],lcIniFileName)) &amp;&amp; òèï îáðåçêè ÷åêà (0-íåïîëíûé/1-ïîëíûé)
THIS.CutType = (lnCutType = 0)
***

THIS.TypeChargeOut = VAL(oRes.GetParam([CHECK],[CHARGE],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
***

*------------------------------------------------------------
* Èíèöèàëèçàöèÿ ïîðòà ñâÿçè
WITH THIS
									*!*		DO CASE
									*!*			CASE lnBaudRate = 115200
									*!*				.BaudRate = 6
									*!*			CASE lnBaudRate = 57600
									*!*				.BaudRate = 5
									*!*			CASE lnBaudRate = 38400
									*!*				.BaudRate = 4
									*!*			CASE lnBaudRate = 19200
									*!*				.BaudRate = 3
									*!*			CASE lnBaudRate = 9600
									*!*				.BaudRate = 2
									*!*			CASE lnBaudRate = 4800
									*!*				.BaudRate = 1
									*!*			CASE lnBaudRate = 2400
									*!*				.BaudRate = 0
									*!*			OTHERWISE
									*!*				.BaudRate = 1
									*!*		ENDCASE
									*!*		
	.ComPort = lnCom
	.BaudRate = lnBaudRate
	.Open()
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE newoperator
*
LPARAMETER ;
	tnOperNo, ; &amp;&amp; íîìåð îïåðàòîðà
	tnOperID, ; &amp;&amp; èäåíòèôèêàòîð îïåðàòîðà
	tcOperName	&amp;&amp; èìÿ îïåðàòîðà
	
*------------------------------------------------------------
IF TYPE([tnOperNo])#[N] AND !BETWEEN(tnOperNo,1,30)
	RETURN .F.  &amp;&amp; íåâåðíûé íîìåð îïåðàòîðà
ENDIF

IF TYPE([tnOperID])#[N] AND !BETWEEN(tnOperID,0,99999999)
	RETURN .F.  &amp;&amp; íåâåðíûé èäåíòèôèêàòîð îïåðàòîðà
ENDIF

IF TYPE([tcOperName])#[C]
	RETURN .F.  &amp;&amp; íåâåðîå èìÿ îïåðàòîðà
ENDIF

WITH THIS
	.WriteTable(2,1,tnOperNo,tnOperID)
	.WriteTable(2,2,tnOperNo,tcOperName)
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE open
* èíèöèàëèçàöèÿ äðàéâåðà

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
LOCAL lResClose
*------------------------------------------------------------------------------
WITH This
	DO CASE
		CASE .BaudRate = 1200
			.BaudRate = 3
		CASE .BaudRate = 2400
			.BaudRate = 4
		CASE .BaudRate = 4800
			.BaudRate = 5
		CASE .BaudRate = 9600
			.BaudRate = 7
		CASE .BaudRate = 14400
			.BaudRate = 9
		CASE .BaudRate = 19200
			.BaudRate = 10
		CASE .BaudRate = 38400
			.BaudRate = 12
		CASE .BaudRate = 57600
			.BaudRate = 14
		CASE .BaudRate = 115200
			.BaudRate = 18
	ENDCASE
ENDWITH
	LOCAL lcIniFileName , lnKkmModel ,lnIdOperator
	lcIniFileName = FULLPATH([KKM.INI])
	lnKkmModel = VAL(oRes.GetParam([KKM],[KKMMODEL],lcIniFileName)) &amp;&amp; Êëàññ ñ êàññîâûì àïïàðàòîì
	lnIdOperator = ALLT(oRes.GetParam([KKM],[KKMPASW],lcIniFileName))
WAIT WINDOW 'Óñòàíàâëèâàåì ñîåäèíåíèå ñ ÊÊÌ ...' NOWAIT
Public ECR
ECR = NULL
ECR = CreateObject("AddIn.FprnM45")
IF TYPE('ECR') = [O]
	* óñòàíîâêà ïàðàìåòðîâ ñâÿçè
	
	ECR.AccessPassword = lnIdOperator &amp;&amp;.IdOperator
	ECR.PortNumber = .ComPort
	ECR.BaudRate = .BaudRate
	*THIS.IdOperator = '30'  &amp;&amp;lnIdOperator
	ECR.Model = lnKkmModel  &amp;&amp; 15 - ôåëèêñ 02ê 25 - øòðèõ ÔÐ-ê 23 - òîðíàäî-ê (ìåðêóðèé MS-k) 27 - ôåëèêñ 3ñê 28 - øòðèõ Ìèíè-ÔÐ-ê
ELSE
This.lEnabled = .f.
RETURN
ENDIF
* çàíèìàåì ïîðò
ECR.DeviceEnabled = .T.
If ECR.ResultCode  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "! ", 16)
RETURN .f.
EndIf
WAIT CLEAR
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE opendrawer
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH ECR

*22.04.2006 14:30 -&gt;îòêðûâàåì äåíåæíûé ÿùèê
*!*	This.ErrorCode = 0
*!*	.Password = This.IdOperator
*!*	.DrawerNumber = 0
.OpenDrawer()
*!*	This.ErrorCode = .ResultCode
*!*	This.SetErrorCode(.ResultCode)
*!*	*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printbarcode
LPARAMETERS lcBarcode
LOCAL lResClose
WITH ECR
	.Height = 31
	.PrintPurpose = 1
	.Alignment = 1
	.PrintBarcodeText = .t.
	.BarcodeType = 0
	.AutoSize = .t.
	.BarcodeControlCode = .t.
	.Barcode = ALLTRIM(lcBarcode)
	lResClose = ECR.PrintBarcode()
	If lResClose  &lt;&gt; 0 Then
	        MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
This.errorcode = 5
	ENDIF
ENDWITH

ENDPROC
PROCEDURE printheader
*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
LOCAL lResClose
WITH ECR
lResClose  = .PrintHeader()
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + .ResultDescription + "!", 16)
This.errorcode = 5
EndIf

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************

ENDPROC
PROCEDURE printsalecheck
* ïå÷àòü ÷åêà ïðîäàæè off-line
WITH THIS
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart()
	
	*------------------------------------------------------------
	* ôîðìèðóåì ïîçèöèþ ïðîäàæè
	SCAN FOR .ErrorCode = 0
		.SalePos()
	ENDSCAN
	
	*------------------------------------------------------------
	* çàêðûâàåì ÷åê
	IF .ErrorCode = 0
		.Summ = .SummCheck
		.CloseCheck()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printstring
LPARAMETERS tcStringForPrinting
*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
LOCAL lResClose
WITH ECR

		*!*	*18.04.2006 09:55 -&gt;Ïå÷àòü ñòðîêè íà îñíîâíîé ëåíòå
		*!*	.UseReceiptRibbon = .T.
		*!*	.UseJournalRibbon = .F.
		*!*	.UseSlipDocument = .F.
		*!*	.Password = This.IdOperator

.TextWrap = 1
.Caption   = ALLTRIM(tcStringForPrinting)
lResClose  = .PrintString()
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + .ResultDescription + "!", 16)
This.errorcode = 5
EndIf

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE ready
*18.04.2006 09:39 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*18.04.2006 09:39 -&gt;Ïðîâåðèì ãîòîâíîñòü ÔÐ
WITH This.drv

.Password = THIS.IdOperator
.GetECRStatus()
RETURN .ECRAdvancedMode

ENDWITH
*------------------------------------------------------------------------------

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE reportx
*18.04.2006 09:50 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
			*!*	IF ECR.DeviceEnabled = .T.
			*!*		ECR.DeviceEnabled = .f.
			*!*	ENDIF
			*!*	ECR.DeviceEnabled = .t.
LOCAL lResClose
* X - îò÷åò
* óñòàíàâëèâàåì ïàðîëü àäìèíèñòðàòîðà ÊÊÌ
*  ECR.Password = "30"
ECR.Password = This.IdOperator
* âõîäèì â ðåæèì îò÷åòîâ áåç ãàøåíèÿ
ECR.Mode = 2
If ECR.SetMode &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
ECR.CancelCheck
RETURN .f.
EndIf
* ñíèìàåì îò÷åò
ECR.ReportType = 2
If ECR.Report &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + ECR.ResultDescription + "!", 16)
ECR.CancelCheck
This.errorcode = 5
RETURN .f.
EndIf

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************


*!*	* X - îò÷åò
*!*	  * óñòàíàâëèâàåì ïàðîëü àäìèíèñòðàòîðà ÊÊÌ
*!*	***  ECR.Password = "29"
*!*	  ECR.Password = "30"
*!*	  * âõîäèì â ðåæèì îò÷åòîâ áåç ãàøåíèÿ
*!*	  ECR.Mode = 2
*!*	  If ECR.SetMode &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf
*!*	  * ñíèìàåì îò÷åò
*!*	  ECR.ReportType = 2
*!*	  If ECR.Report &lt;&gt; 0 Then
*!*	    Return
*!*	  EndIf

ENDPROC
PROCEDURE returncheck
* ïå÷àòü ÷åêà âîçâðàòà off-line

WITH THIS
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart()
	
	*------------------------------------------------------------
	* ôîðìèðóåì ïîçèöèþ âîçâðàòà òîâàðà
	SCAN FOR .ErrorCode = 0
		.ReturnSalePos()
	ENDSCAN
		
	*------------------------------------------------------------
	* çàêðûâàåì ÷åê
	IF .ErrorCode = 0
		.Summ = .SummCheck
		.CloseCheck()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE seterrorcode

LPARAMETER lnErrorCode
RETURN
*18.04.2006 09:44 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:45 -&gt;óñòàíîâêà êîäà îøèáêè
IF .ResultCode # 0
	THIS.ErrorCode = lnErrorCode
	MESSAGEBOX(.ResultCodeDescription,48,[Îøèáêà îáîðóäîâàíèÿ: ÊÊÌ ])
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE writetable
LPARAMETERS tnTable, ; &amp;&amp; íîìåð âíóòðåííåé òàáëèöû ÊÊÌ
			tnField, ; &amp;&amp; ïîëå âíóòðåííåé òàáëèöû ÊÊÌ
			tnRow  , ; &amp;&amp; ðÿä âíóòðåííåé òàáëèöû ÊÊÌ
			tuValue    &amp;&amp; çíà÷åíèå

*18.04.2006 09:45 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

.Password = This.IdOperator
.TableNumber = tnTable
.FieldNumber = tnField
.GetFieldStruct()
.RowNumber = tnRow
IF .FieldType
	.ValueOfFieldString = tuValue
ELSE
	.ValueOfFieldInteger = tuValue
ENDIF
.WriteTable()
This.SetErrorCode(.ResultCode)

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3>idoperator òåêóùèé ïàðîëü ïîëüçîâàòåëÿ
summcheck ñóììà ïî ÷åêó
comport íîìåð COM ïîðòà
baudrate ñêîðîñòü îáìåíà  6 = 115200  5 = 57600 è ò.ä.
summ ñóììà ïëàòû
dsccheckperc ïðîöåíò ñêèäêè íà ÷åê
errorcode êîä îøèáêè
drvname èìÿ äðàéâåðà
timeout òàéì-àóò íà ïåðåäà÷ó áàéòà
kkm íàçâàíèå ÊÊÌ
opened ïðèçíàê îòêðûòîãî ïîðòà ñâÿçè
headerfile èìÿ ôàéëà çàãîëîâêà
nameoperator ôàìèëèÿ îïåðàòîðà
allowvat
cutenabled
cuttype
typechargeout
drv
lenabled ðàçðåøåíèå ðàáîòû ñ ÔÐ
checkopen ïîêàçûâàåò îòêðûò èëè çàêðûò ÷åê
*info 
*open 
*printsalecheck ïå÷àòü ÷åêà âîçâðàòà
*continueprint ïðîäîëæèòü ïå÷àòü
*seterrorcode óñòàíîâêà êîäà îøèáêè
*ready ãîòîâíîñòü ÊÊÌ ê ïå÷àòè
*errorcodedescription 
*returncheck ÷åê âîçâðàòà
*changeheader ñìåíà çàãîëîâêà ÷åêà
*writetable çàïèñü äàííûõ â òàáëèöó ïàðàìåòðîâ ÊÊÌ
*newoperator ðåãèñòðàöèÿ íîâîãî îïåðàòîðà â ÊÊÌ
*checksaletran ïðîäàæà
*checksalestorno 
*checksalereturn 
*reportx X-îò÷åò
*closeshift çàêðûòèå ñìåíû
*cancelcheck ñáðîñ ÷åêà
*closecheck çàêðûòèå ÷åêà
*beep ãóäîê
*printstring ïå÷àòü ñòðîêè
*feeddocument ïðîòÿæêà äîêóìåíòà
*checkdiscount ñêèäêà íà ÷åê
*opendrawer îòêðûòèå äåíåæíîãî ÿùèêà
*cutcheck îòðåçêà ÷åêà
*from_postav òåêñò ïî îò ïîñòàâùèêà
*cashincome Âíåñåíèå íàëè÷íîñòè
*cashoutcome Èçúÿòèå íàëè÷íîñòè
*printbarcode Ïå÷àòü øòðèõ-êîäà
*printheader Ïå÷àòü çàãîëîâêà
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7>óïðàâëåíèå óíèâåðñàëüíûé äðàéâåð</reserved7>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>kkm_uni</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1270KTSSA</uniqueid>
		<timestamp>998723850</timestamp>
		<class>cst</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>custom</baseclass>
		<objname>spark</objname>
		<parent/>
		<properties>Height = 19
Width = 100
idoperator = 111111
summcheck = 0
comport = 1
baudrate = 2
summ = 0
dsccheckperc = 0
errorcode = 0
drvname = KKS.Spark617TF.1
timeout = 50
kkm = ÑÏÀÐÊ
headerfile = 
nameoperator = 
allowvat = .F.
cutenabled = .F.
cuttype = .T.
typechargeout = 0
drv = 
lenabled = .T.
cashno = 0
lallowerrormsg = .F.
makecheck = .F.
Name = "spark"
</properties>
		<protected>comport
baudrate
drvname
timeout
opened
headerfile
lenabled
initsession
</protected>
		<methods>PROCEDURE cancelcheck
*18.04.2006 09:52 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*02.10.2007 21:25 -&gt;àííóëèðîâàíèå(ñáðîñ) ÷åêà
.ErrorCode = .drv.CancelDocument()
.SetErrorCode()
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cashincome
LPARAMETERS tnSumm

*18.10.2006 11:46 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*10.10.2007 16:22 -&gt;Ïðîâåðÿåì ñîñòîÿíèå ÊÊÌ
IF NOT .InitSession(4)
	RETURN
ENDIF
*------------------------------------------------------------------------------

*10.10.2007 16:22 -&gt;Âíåñåíèå äåíåã â êàññó
.ErrorCode = .drv.Item(ROUND(tnQnt,3)*1000,ROUND(tyPrice,2)*100,[Âíåñåíèå äåíåã],0)
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cashoutcome
LPARAMETERS tnSumm

*18.10.2006 11:46 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*10.10.2007 16:23 -&gt;Ïðîâåðÿåì ñîñòîÿíèå ÊÊÌ
IF NOT .InitSession(5)
	RETURN
ENDIF
*------------------------------------------------------------------------------

*10.10.2007 16:23 -&gt;Âûïëàòà äåíåã èç êàññû
.ErrorCode = .drv.Item(ROUND(tnQnt,3)*1000,ROUND(tyPrice,2)*100,[Âûïëàòà äåíåã],0)
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checkdiscount
LPARAMETERS	tyDiscSumm,tcDiscountComment

*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*02.10.2007 21:36 -&gt;ñêèäêà
.ErrorCode = 0
.ErrorCode = .drv.AbsoluteCorrection(-tyDiscSumm)
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksalereturn
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:49 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
WITH This

*02.10.2007 22:52 -&gt;Ïðîâåðÿåì ñîñòîÿíèå ÊÊÌ
IF NOT .InitSession(2)
	RETURN
ENDIF
*------------------------------------------------------------------------------

*02.10.2007 21:53 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè âîçâðàòà ïðîäàæè
.ErrorCode = .drv.Item(ABS(ROUND(tnQnt,3))*1000,ABS(ROUND(tyPrice,2))*100,ALLTRIM(tcTvrNM),0)
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksalestorno
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:48 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*02.10.2007 21:54 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè ñòîðíèðîâàíèÿ
.ErrorCode = .drv.VoidItem(ROUND(tnQnt,3)*1000,ROUND(tyPrice,2)*100,ALLTRIM(tcTvrNM),0)
IF .ErrorCode = 0
	.SummCheck = .SummCheck - ROUND(tnQnt,3)*ROUND(tyPrice,3)
ELSE	
	.SetErrorCode()
ENDIF	
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksaletran
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:49 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
WITH This

*02.10.2007 22:53 -&gt;Ïðîâåðÿåì ñîñòîÿíèå ÊÊÌ
IF NOT .InitSession(1)
	RETURN
ENDIF
*------------------------------------------------------------------------------
WAIT WINDOW 'Ïå÷àòàåì '+ALLTRIM(tcTvrNM)+' ...' NOWAIT

*02.10.2007 21:57 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè ïðîäàæè
.ErrorCode = .drv.Item(ROUND(tnQnt,3)*1000,ROUND(tyPrice,2)*100,ALLTRIM(tcTvrNM),0)
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ELSE
	.SummCheck = .SummCheck + ROUND(tyPrice,2)*ROUND(tnQnt,3)
ENDIF
*------------------------------------------------------------------------------

ENDWITH
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE closecheck
LPARAMETERS	tyCheckSumm1, tyCheckSumm2, tyCheckSumm3, tyCheckSumm4

*02.10.2007 22:02 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL   lnTenderType, ;
		lyCheckSumm, typeCheck
*-----------------------------------------------------------------------------

*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
WAIT WINDOW 'Çàâåðøàåì ÷åê ...' NOWAIT
WITH This
typeCheck = .drv.GetDocInfo(1)
*02.10.2007 22:04 -&gt;çàêðûòèå ÷åêà
*02.10.2007 22:04 -&gt;ïåðåä îïåðàöèåé âîçâðàòà ñáðîñèòü DscCheckPerc
IF tyCheckSumm1&gt;0
	*.Checkdiscount(1,[])
	IF typeCheck = 2
		tyCheckSumm1 = 0
	endif
	.ErrorCode = .drv.Tender(tyCheckSumm1*100,8,[],[])
	IF .ErrorCode &lt;&gt; 0
		.SetErrorCode()
		RETURN
	ENDIF
ENDIF
IF tyCheckSumm2&gt;0
	IF typeCheck = 2
		tyCheckSumm2 = 0
	endif
	.ErrorCode = .drv.Tender(tyCheckSumm2*100,7,[],[])
	IF .ErrorCode &lt;&gt; 0
		.SetErrorCode()
		RETURN
	ENDIF
ENDIF
IF tyCheckSumm3&gt;0
	IF typeCheck = 2
		tyCheckSumm3 = 0
	endif
	.ErrorCode = .drv.Tender(tyCheckSumm3*100,6,[],[])
	IF .ErrorCode &lt;&gt; 0
		.SetErrorCode()
		RETURN
	ENDIF
ENDIF
IF tyCheckSumm4&gt;0
	IF typeCheck = 4
		tyCheckSumm1 = 0
	endif
	.ErrorCode = .drv.Tender(tyCheckSumm4*100,5,[],[])
	IF .ErrorCode &lt;&gt; 0
		.SetErrorCode()
	ENDIF
ENDIF

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closeshift
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*02.10.2007 22:12 -&gt;ñìåííûé îò÷åò ñ ãàøåíèåì
.ErrorCode = .drv.SetClerk([Êàññèð1])
.ErrorCode = .drv.PrintReport(3)
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE continueprint
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*02.10.2007 22:22 -&gt;ïðîäîëæåíèå ïå÷àòè
*02.10.2007 22:22 -&gt;âûçûâàåòñÿ, åñëè â ïðîöåññå ïå÷àòè êîí÷àåòñÿ áóìàãà
WITH This

.ErrorCode = .drv.ResetError()
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD   ***************************************
************************************************************************************************
ENDPROC
PROCEDURE Destroy
*02.10.2007 21:16 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv
	IF This.Opened
		.DeinitDevice() &amp;&amp; îñâîáîäèòü COM-ïîðò
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Error
*
LPARAMETERS nError, cMethod, nLine

*------------------------------------------------------------
WITH THIS
	IF TYPE([.drv])#[O]
		MESSAGEBOX([Íå çàãðóæåí OLE-äðàéâåð],48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
	ELSE
		MESSAGEBOX([Îøèáêà # ]+ALLTRIM(STR(nError))+[ â ìåòîäå ]+cMethod+[ ñòðîêà ]+ ;
						ALLTRIM(STR(nLine)),48,[Îøèáêà äðàéâåðà ÊÊÌ ÑÏÀÐÊ])
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE errorcodedescription
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN 0
ENDIF
*------------------------------------------------------------------------------

RETURN This.drv.GetErrorComment(This.ErrorCode)
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE feeddocument
LPARAMETERS tnStringQuantity
IF tnStringQuantity &lt;1
RETURN
ENDIF
*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
FOR nStr = 1 TO tnStringQuantity
	this.printstring(' ')
ENDFOR
*------------------------------------------------------------------------------
RETURN
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE getecradvancedmode
RETURN 0
ENDPROC
PROCEDURE getecradvancedmodedescription
RETURN []
ENDPROC
PROCEDURE getecrmode
RETURN 0
ENDPROC
PROCEDURE getecrmodedescription
RETURN []
ENDPROC
PROCEDURE getoperationreg
RETURN 0
ENDPROC
PROCEDURE Init
*02.10.2007 21:05 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL	lcIniFileName, ;
		lnCom, ;
		lnBaudRate, ;
		lvAllowVAT, ;
		llLibLoad, ;
		lnCutEnabled, ;
		lnCutType
***
lcIniFileName = FULLPATH([KKM.INI])
*------------------------------------------------------------
* ïðî÷èòàåì ïàðàìåòðû ÊÊÌ èç INI-ôàéëà
lnCom = VAL(oRes.GetParam([KKM],[COM],lcIniFileName))	&amp;&amp; íîìåð COM-ïîðòà
***

lnBaudRate = VAL(oRes.GetParam([KKM],[BAUDRATE],lcIniFileName)) &amp;&amp; ñêîðîñòü ïåðåäà÷è äàííûõ
THIS.HeaderFile = UPPER(ALLTRIM(oRes.GetParam([KKM],[HEADER],lcIniFileName))) &amp;&amp; èìÿ ôàéëà çàãîëîâêà
***

lnAllowVAT = VAL(oRes.GetParam([KKM],[VAT],lcIniFileName)) &amp;&amp; ïå÷àòü ÍÄÑ
THIS.AllowVAT = lnAllowVAT # 0
***

THIS.lEnabled = (VAL(oRes.GetParam([KKM],[ENABLED],lcIniFileName)) = 1) &amp;&amp; ðàçðåøåíèå ðàáîòû ÔÐ
***

lnCutEnabled = VAL(oRes.GetParam([CHECK],[CUT_ENABLED],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
THIS.CutEnabled = (lnCutEnabled = 1)
***

lnCutType = VAL(oRes.GetParam([CHECK],[CUT_TYPE],lcIniFileName)) &amp;&amp; òèï îáðåçêè ÷åêà (0-íåïîëíûé/1-ïîëíûé)
THIS.CutType = (lnCutType = 0)
***

THIS.TypeChargeOut = VAL(oRes.GetParam([CHECK],[CHARGE],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
***

*------------------------------------------------------------
* Èíèöèàëèçàöèÿ ïîðòà ñâÿçè
WITH THIS
	.ComPort = lnCom
	.Open()
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE initsession
LPARAMETERS tnDocType

*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
WITH This
WAIT WINDOW 'Ïðîâåðÿåì îòêðûòèå ñìåíû ...' NOWAIT

*02.10.2007 22:41 -&gt;îòêðûâàåì ñìåíó
IF .drv.GetDeviceInfo(4) = 0
	.ErrorCode = .drv.StartSession(.NameOperator,.CashNo)
	IF .ErrorCode &lt;&gt; 0
		.SetErrorCode()
		RETURN .F.
	ENDIF
ENDIF
WAIT WINDOW 'Îòêðûâàåì íîâûé ÷åê ...' NOWAIT
IF .drv.GetDeviceInfo(102) = 0
	.ErrorCode = .drv.StartDocument(tnDocType,1,1,[Êàññèð2])
	IF .ErrorCode &lt;&gt; 0
		.SetErrorCode()
		RETURN .F.
	ENDIF
ENDIF
*------------------------------------------------------------------------------
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE open
* èíèöèàëèçàöèÿ äðàéâåðà
WITH This

*02.10.2007 21:07 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
*18.04.2006 09:37 -&gt;Èíèöèàëèçàöèÿ äðàéâåðà
.ErrorCode = 0
.drv = CreateObject(.drvName)
IF TYPE('.drv') = [O]
	* óñòàíîâêà ïàðàìåòðîâ ñâÿçè
	.ErrorCode = .drv.SetDeviceOpt(1,.ComPort)
	.ErrorCode = .drv.SetAccessKey([111111]) &amp;&amp; äëÿ ôèñêàëüíîãî ðåæèìà
	*.ErrorCode = .drv.SetAccessKey([000000]) &amp;&amp; äëÿ äåìî ðåæèìà
	.ErrorCode = .drv.InitDevice()
	IF .ErrorCode &lt;&gt; 0
		.drv.DeinitDevice() &amp;&amp; îñâîáîäèòü COM-ïîðò
		.SetErrorCode()
		RETURN
	ENDIF
	.Opened = .T.
ELSE
	.ErrorCode = 1000  &amp;&amp; OLE-äðàéâåð íå íàéäåí
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE opendrawer
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*02.10.2007 22:26 -&gt;îòêðûâàåì äåíåæíûé ÿùèê
.ErrorCode = .drv.OpenDrawer()
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printheader
RETURN
ENDPROC
PROCEDURE printstring
LPARAMETERS tcStringForPrinting

*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This
*02.10.2007 22:30 -&gt;Ïå÷àòü ñòðîêè

***.ErrorCode =  .drv.TextLine = ALLTRIM(tcStringForPrinting)
.ErrorCode =  .drv.TextLine(ALLTRIM(tcStringForPrinting))
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE reportx
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*02.10.2007 22:12 -&gt;ñìåííûé îò÷åò
.ErrorCode = .drv.SetClerk([Êàññèð1])
.ErrorCode = .drv.PrintReport(1)
IF .ErrorCode &lt;&gt; 0
	.SetErrorCode()
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE setallowerrormsgflag
LPARAMETERS tlAllowErrorMsg

This.lAllowErrorMsg = tlAllowErrorMsg
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE seterrorcode
*18.04.2006 09:44 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*02.10.2007 21:28 -&gt;óñòàíîâêà êîäà îøèáêè
IF .ErrorCode &lt;&gt; 0
	MESSAGEBOX(.drv.GetErrorComment(.ErrorCode),48,[Îøèáêà äðàéâåðà ÊÊÌ ÑÏÀÐÊ])
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3>idoperator òåêóùèé ïàðîëü ïîëüçîâàòåëÿ
summcheck ñóììà ïî ÷åêó
comport íîìåð COM ïîðòà
baudrate ñêîðîñòü îáìåíà  6 = 115200  5 = 57600 è ò.ä.
summ ñóììà ïëàòû
dsccheckperc ïðîöåíò ñêèäêè íà ÷åê
errorcode êîä îøèáêè
drvname èìÿ äðàéâåðà
timeout òàéì-àóò íà ïåðåäà÷ó áàéòà
kkm íàçâàíèå ÊÊÌ
opened ïðèçíàê îòêðûòîãî ïîðòà ñâÿçè
headerfile èìÿ ôàéëà çàãîëîâêà
nameoperator ôàìèëèÿ îïåðàòîðà
allowvat
cutenabled
cuttype
typechargeout
drv
lenabled ðàçðåøåíèå ðàáîòû ñ ÔÐ
cashno
lallowerrormsg
makecheck makecheck Ñòàòóñ: ÷åê ãîòîâèòñÿ
*info 
*open 
*continueprint ïðîäîëæèòü ïå÷àòü
*seterrorcode óñòàíîâêà êîäà îøèáêè
*ready ãîòîâíîñòü ÊÊÌ ê ïå÷àòè
*errorcodedescription 
*returncheck ÷åê âîçâðàòà
*changeheader ñìåíà çàãîëîâêà ÷åêà
*checksaletran ïðîäàæà
*checksalestorno 
*checksalereturn 
*reportx X-îò÷åò
*closeshift çàêðûòèå ñìåíû
*cancelcheck ñáðîñ ÷åêà
*closecheck çàêðûòèå ÷åêà
*beep ãóäîê
*printstring ïå÷àòü ñòðîêè
*feeddocument ïðîòÿæêà äîêóìåíòà
*checkdiscount ñêèäêà íà ÷åê
*opendrawer îòêðûòèå äåíåæíîãî ÿùèêà
*cutcheck îòðåçêà ÷åêà
*initsession 
*cashincome 
*cashoutcome 
*setallowerrormsgflag 
*getecradvancedmode 
*getecradvancedmodedescription 
*getecrmode 
*getecrmodedescription 
*getecrstatus 
*getoperationreg 
*printheader Ïå÷àòü çàãîëîâêà
*printbarcode Ïå÷àòü øòðèõêîäà
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7>óïðàâëåíèå ÊÊÌ "Ñïàðê"</reserved7>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>spark</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>WINDOWS</platform>
		<uniqueid>_1270KTSSA</uniqueid>
		<timestamp>998723905</timestamp>
		<class>cst</class>
		<classloc>base_v1.vcx</classloc>
		<baseclass>custom</baseclass>
		<objname>shtrih</objname>
		<parent/>
		<properties>idoperator = 30
summcheck = 0
comport = 1
baudrate = 2
summ = 0
dsccheckperc = 0
errorcode = 0
drvname = AddIn.DrvFR
timeout = 50
kkm = ØÒÐÈÕ-ÔÐ-Ð
headerfile = 
nameoperator = 
allowvat = .F.
cutenabled = .F.
cuttype = .T.
typechargeout = 0
drv = 
lenabled = .T.
makecheck = .F.
Name = "shtrih"
</properties>
		<protected>comport
baudrate
drvname
timeout
opened
headerfile
lenabled
writetable
</protected>
		<methods>PROCEDURE beep
*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:54 -&gt;ãóäîê
This.ErrorCode = 0
.Password = This.IdOperator
.Beep()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cancelcheck
*18.04.2006 09:52 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:52 -&gt;àííóëèðîâàíèå(ñáðîñ) ÷åêà (òîëüêî ñ ïàðîëåì àäìèíèñòðàòîðà)
This.ErrorCode = 0
.Password = This.IdOperator
.CancelCheck()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE cashincome
LPARAMETERS tnSumm

*18.10.2006 11:46 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.10.2006 11:46 -&gt;Âíåñåíèå äåíåã â êàññó
This.ErrorCode = 0
.Password = This.IdOperator
.Summ1	  = tnSumm
.CashIncome()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************

ENDPROC
PROCEDURE cashoutcome
LPARAMETERS tnSumm

*18.10.2006 11:48 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.10.2006 11:48 -&gt;Èçúÿòèå äåíåã èç êàññû
This.ErrorCode = 0
.Password = This.IdOperator
.Summ1	  = tnSumm
.CashOutcome()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE changeheader
*18.04.2006 09:41 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL   lnHeaderFile, ;
		lnLineCounter, ;
		lcHeadLine
*------------------------------------------------------------------------------

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This

*18.04.2006 09:42 -&gt;çàïèñü íîâîãî çàãîëîâêà â òàáëèöó ¹4 ÊÊÌ	
IF !EMPTY(.HeaderFile) AND FILE(.HeaderFile)
	lnHeaderFile = FOPEN(.HeaderFile)
	IF lnHeaderFile &gt; 0
		lnLineCounter = 0
		DO WHILE !FEOF(lnHeaderFile) AND lnLineCounter &lt; 3 AND .drv.ResultCode = 0
			lcHeadLine = FGETS(lnHeaderFile)
			.WriteTable(4,1,4+lnLineCounter,lcHeadLine)
			lnLineCounter = lnLineCounter+1
		ENDDO
		FCLOSE(lnHeaderFile)
	ENDIF
ENDIF
.SetErrorCode(.drv.ResultCode)
*------------------------------------------------------------------------------
	
ENDWITH

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checkdiscount
LPARAMETERS	lyDiscSumm,tcDiscountComment

*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*22.04.2006 10:02 -&gt;ñêèäêà
This.ErrorCode = 0
.Password = This.IdOperator
STORE 0 TO .Summ2, .Summ3, .Summ4
.Summ1 = lyDiscSumm

IF TYPE([tcDiscountComment])=[C]
	.StringForPrinting = tcDiscountComment
ENDIF

.Discount()
IF .ResultCode # 0
	This.SetErrorCode(.ResultCode)
	RETURN
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksalereturn
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:49 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:50 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè âîçâðàòà ïðîäàæè
This.ErrorCode = 0
.Password = This.IdOperator

.Price = ROUND(tyPrice,2)
.Quantity = ROUND(tnQnt,3)
STORE 0 TO .Tax1, .Tax2, .Tax3, .Tax4
DO CASE
	CASE THIS.AllowVAT AND tyVatRate &gt; 0 AND tyVatRate =&lt; 10
		.Tax1 = 1
	CASE THIS.AllowVAT AND  tyVatRate &gt; 10 AND tyVatRate &lt; 20
		.Tax1 = 2
	CASE THIS.AllowVAT AND  tyVatRate =0
		.Tax1 = 3
ENDCASE
.StringForPrinting = ALLTRIM(tcTvrNM)
.ReturnSale()
IF .ResultCode # 0
	This.SetErrorCode(.ResultCode)
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksalestorno
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF

*18.04.2006 09:48 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:48 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè ñòîðíèðîâàíèÿ
This.ErrorCode = 0
.Password = This.IdOperator
.Summ1 = ROUND(tyPrice,2)*ROUND(tnQnt,3)
STORE 0 TO .Tax1, .Tax2, .Tax3, .Tax4
DO CASE
	CASE THIS.AllowVAT AND tyVatRate &gt; 0 AND tyVatRate =&lt; 10
		.Tax1 = 1
	CASE THIS.AllowVAT AND  tyVatRate &gt; 10 AND tyVatRate &lt; 20
		.Tax1 = 2
	CASE THIS.AllowVAT AND  tyVatRate =0
		.Tax1 = 3
ENDCASE
.StringForPrinting = ALLTRIM(tcTvrNM)
.Storno()
IF .ResultCode = 0
	This.SummCheck = THIS.SummCheck - .Summ1
ELSE	
	This.SetErrorCode(.ResultCode)
ENDIF	
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE checksaletran
LPARAMETERS  tcTvrNM,tnQnt,tyPrice,tyVatRate
IF PCOUNT()&lt;4
	tyVatRate = 0
ENDIF
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:47 -&gt;Ðåãèñòðàöèÿ òðàíçàêöèè ïðîäàæè
This.ErrorCode = 0
.Password = THIS.IdOperator
.Quantity = ROUND(tnQnt,3)
.Price = ROUND(tyPrice,2)
STORE 0 TO .Tax1, .Tax2, .Tax3, .Tax4
DO CASE
	CASE THIS.AllowVAT AND tyVatRate &gt; 0 AND tyVatRate =&lt; 10
		.Tax1 = 1
	CASE THIS.AllowVAT AND  tyVatRate &gt; 10 AND tyVatRate &lt; 20
		.Tax1 = 2
	CASE THIS.AllowVAT AND  tyVatRate =0
		.Tax1 = 3
ENDCASE
.StringForPrinting = ALLTRIM(tcTvrNM)
.Sale()
IF .ResultCode = 0
	This.SummCheck = THIS.SummCheck + ROUND(tyPrice,2)*ROUND(tnQnt,3)
ELSE	
	This.SetErrorCode(.ResultCode)
	RETURN
ENDIF	
*------------------------------------------------------------------------------

ENDWITH
*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE closecheck
LPARAMETERS	lyCheckSumm1, lyCheckSumm2, lyCheckSumm3, lyCheckSumm4

*18.04.2006 09:53 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:53 -&gt;çàêðûòèå ÷åêà
*18.04.2006 09:53 -&gt;ïåðåä îïåðàöèåé âîçâðàòà ñáðîñèòü DscCheckPerc
This.ErrorCode = 0
STORE 0 TO .Summ2,.Summ3,.Summ4
.Password = This.IdOperator
.Summ1 = lyCheckSumm1
IF PCOUNT()&gt;1
	.Summ2 = lyCheckSumm2
ENDIF
IF PCOUNT()&gt;2
	.Summ3 = lyCheckSumm3
ENDIF
IF PCOUNT()&gt;3
	.Summ4 = lyCheckSumm4
ENDIF

* Åñëè ÷åê ðàâåí 0 - àííóëèðóåì åãî.
IF .Summ1+.Summ2+.Summ3+.Summ4 = 0
	.StringForPrinting = '=_________ÑÓÌÌÀ Ê ÎÏËÀÒÅ=0_________='
	.CancelCheck()
ELSE
	.StringForPrinting = '===================================='
	.CloseCheck()
ENDIF
IF .ResultCode # 0
	This.SetErrorCode(.ResultCode)
	RETURN
ENDIF

*!*		STORE 0 TO THIS.DscCheckPerc, THIS.Summ
*!*		LOCAL lnCounter
*!*		lnCounter = 0
*!*		DO WHILE THIS.Ready() # 0 OR lnCounter &lt; 20
*!*			lnCounter = lnCounter + 1
*!*		ENDDO

*------------------------------------------------------------
* îòðåçàòü ÷åê
*THIS.CutCheck()

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE closeshift
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:52 -&gt;ñìåííûé îò÷åò ñ ãàøåíèåì
*18.04.2006 09:52 -&gt;ïðîèçâîäèòñÿ òîëüêî ñ ïàðîëåì àäìèíèñòðàòîðà
This.ErrorCode = 0
.Password = This.IdOperator
.PrintReportWithCleaning()
This.ErrorCode = .ResultCode
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE continueprint
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*18.04.2006 09:39 -&gt; ïðîäîëæåíèå ïå÷àòè
*18.04.2006 09:39 -&gt; âûçûâàåòñÿ, åñëè â ïðîöåññå ïå÷àòè êîí÷àåòñÿ áóìàãà
WITH This.drv

This.ErrorCode = 0
.Password = THIS.IdOperator
.ContinuePrint()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD   ***************************************
************************************************************************************************
ENDPROC
PROCEDURE cutcheck
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*30.06.2005 13:03 -&gt;Ïðîâåðèì, ìîæíî ëè îòðåçàòü ÷åê
.Password = This.IdOperator
.CutType = .F.
.CutCheck()
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------
	
ENDWITH
*------------------------------------------------------------------------------

*******************************************************************************
********************************* END METHOD **********************************
*******************************************************************************
ENDPROC
PROCEDURE Destroy
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv
	IF This.Opened
		.Disconnect() &amp;&amp; îñâîáîäèòü COM-ïîðò
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Error
*
LPARAMETERS nError, cMethod, nLine

*------------------------------------------------------------
WITH THIS
	IF TYPE([.drv])#[O]
		MESSAGEBOX([Íå çàãðóæåí OLE-äðàéâåð],48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
	ELSE
		MESSAGEBOX([Îøèáêà # ]+ALLTRIM(STR(nError))+[ â ìåòîäå ]+cMethod+[ ñòðîêà ]+ ;
						ALLTRIM(STR(nLine)),48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE errorcodedescription
*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN 0
ENDIF
*------------------------------------------------------------------------------

RETURN This.drv.ResultCodeDescription
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE feeddocument
LPARAMETERS tnStringQuantity

*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:57 -&gt;Ïðîòÿãèâàåì äîêóìåíò
.StringQuantity	= tnStringQuantity
.UseReceiptRibbon = .T.
.UseJournalRibbon = .F.
.UseSlipDocument = .F.
.Password = This.IdOperator

.FeedDocument()

This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE info
*18.04.2006 09:58 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv
	.ShowProperties() &amp;&amp; ñìîòðèì ñâîéñòâà ÊÊÌ
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE Init
*14.04.2006 10:52 -&gt;Îáúÿâëåíèå è èíèöèàëèçàöèÿ ïåðåìåííûõ
LOCAL	lcIniFileName, ;
		lnCom, ;
		lnBaudRate, ;
		lvAllowVAT, ;
		llLibLoad, ;
		lnCutEnabled, ;
		lnCutType
***
lcIniFileName = FULLPATH([KKM.INI])
*------------------------------------------------------------
* ïðî÷èòàåì ïàðàìåòðû ÊÊÌ èç INI-ôàéëà
lnCom = VAL(oRes.GetParam([KKM],[COM],lcIniFileName))	&amp;&amp; íîìåð COM-ïîðòà
***

lnBaudRate = VAL(oRes.GetParam([KKM],[BAUDRATE],lcIniFileName)) &amp;&amp; ñêîðîñòü ïåðåäà÷è äàííûõ
THIS.HeaderFile = UPPER(ALLTRIM(oRes.GetParam([KKM],[HEADER],lcIniFileName))) &amp;&amp; èìÿ ôàéëà çàãîëîâêà
***

lnAllowVAT = VAL(oRes.GetParam([KKM],[VAT],lcIniFileName)) &amp;&amp; ïå÷àòü ÍÄÑ
THIS.AllowVAT = lnAllowVAT # 0
***

THIS.lEnabled = (VAL(oRes.GetParam([KKM],[ENABLED],lcIniFileName)) = 1) &amp;&amp; ðàçðåøåíèå ðàáîòû ÔÐ
***

lnCutEnabled = VAL(oRes.GetParam([CHECK],[CUT_ENABLED],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
THIS.CutEnabled = (lnCutEnabled = 1)
***

lnCutType = VAL(oRes.GetParam([CHECK],[CUT_TYPE],lcIniFileName)) &amp;&amp; òèï îáðåçêè ÷åêà (0-íåïîëíûé/1-ïîëíûé)
THIS.CutType = (lnCutType = 0)
***

**THIS.TypeChargeOut = VAL(oRes.GetParam([CHECK],[CHARGE],lcIniFileName)) &amp;&amp; ðàçðåøåíèå îáðåçêè ÷åêà
***

*------------------------------------------------------------
* Èíèöèàëèçàöèÿ ïîðòà ñâÿçè
WITH THIS
	.ComPort = lnCom
	DO CASE
		CASE lnBaudRate = 115200
			.BaudRate = 6
		CASE lnBaudRate = 57600
			.BaudRate = 5
		CASE lnBaudRate = 38400
			.BaudRate = 4
		CASE lnBaudRate = 19200
			.BaudRate = 3
		CASE lnBaudRate = 9600
			.BaudRate = 2
		CASE lnBaudRate = 4800
			.BaudRate = 1
		CASE lnBaudRate = 2400
			.BaudRate = 0
		OTHERWISE
			.BaudRate = 1
	ENDCASE
	
	.Open()
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE newoperator
*
LPARAMETER ;
	tnOperNo, ; &amp;&amp; íîìåð îïåðàòîðà
	tnOperID, ; &amp;&amp; èäåíòèôèêàòîð îïåðàòîðà
	tcOperName	&amp;&amp; èìÿ îïåðàòîðà
	
*------------------------------------------------------------
IF TYPE([tnOperNo])#[N] AND !BETWEEN(tnOperNo,1,30)
	RETURN .F.  &amp;&amp; íåâåðíûé íîìåð îïåðàòîðà
ENDIF

IF TYPE([tnOperID])#[N] AND !BETWEEN(tnOperID,0,99999999)
	RETURN .F.  &amp;&amp; íåâåðíûé èäåíòèôèêàòîð îïåðàòîðà
ENDIF

IF TYPE([tcOperName])#[C]
	RETURN .F.  &amp;&amp; íåâåðîå èìÿ îïåðàòîðà
ENDIF

WITH THIS
	.WriteTable(2,1,tnOperNo,tnOperID)
	.WriteTable(2,2,tnOperNo,tcOperName)
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE open
* èíèöèàëèçàöèÿ äðàéâåðà
WITH This

*18.04.2006 09:36 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*18.04.2006 09:37 -&gt;Èíèöèàëèçàöèÿ äðàéâåðà
.ErrorCode = 0
.drv = CreateObject(.drvName)
IF TYPE('.drv') = [O]
	* óñòàíîâêà ïàðàìåòðîâ ñâÿçè
	.drv.Password = .IdOperator
	.drv.ComNumber = .ComPort
	.drv.BaudRate = .BaudRate
	.drv.TimeOut = .TimeOut
ELSE
	.ErrorCode = 1000  &amp;&amp; OLE-äðàéâåð íå íàéäåí
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE opendrawer
*18.04.2006 09:51 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*22.04.2006 14:30 -&gt;îòêðûâàåì äåíåæíûé ÿùèê
This.ErrorCode = 0
.Password = This.IdOperator
.DrawerNumber = 0
.OpenDrawer()
This.ErrorCode = .ResultCode
This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printheader
*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------
RETURN
LOCAL lResClose
WITH ECR
lResClose  = .PrintHeader()
If lResClose  &lt;&gt; 0 Then
MessageBox("Îøèáêà ÊÊÌ: " + .ResultDescription + "!", 16)
This.errorcode = 5
EndIf

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************


ENDPROC
PROCEDURE printsalecheck
* ïå÷àòü ÷åêà ïðîäàæè off-line
WITH THIS
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart()
	
	*------------------------------------------------------------
	* ôîðìèðóåì ïîçèöèþ ïðîäàæè
	SCAN FOR .ErrorCode = 0
		.SalePos()
	ENDSCAN
	
	*------------------------------------------------------------
	* çàêðûâàåì ÷åê
	IF .ErrorCode = 0
		.Summ = .SummCheck
		.CloseCheck()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE printstring
LPARAMETERS tcStringForPrinting

*18.04.2006 09:54 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled OR ISNULL(tcStringForPrinting) OR EMPTY(tcStringForPrinting)
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:55 -&gt;Ïå÷àòü ñòðîêè íà îñíîâíîé ëåíòå
.UseReceiptRibbon = .T.
.UseJournalRibbon = .F.
.UseSlipDocument = .F.
.Password = This.IdOperator

.StringForPrinting = ALLTRIM(tcStringForPrinting)
.PrintString()

This.SetErrorCode(.ResultCode)
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE ready
*18.04.2006 09:39 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

*18.04.2006 09:39 -&gt;Ïðîâåðèì ãîòîâíîñòü ÔÐ
WITH This.drv

.Password = THIS.IdOperator
.GetECRStatus()
RETURN .ECRAdvancedMode

ENDWITH
*------------------------------------------------------------------------------

************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE reportx
*18.04.2006 09:50 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:51 -&gt;ñìåííûé îò÷åò áåç ãàøåíèÿ
*18.04.2006 09:51 -&gt;ïðîèçâîäèòñÿ òîëüêî ñ ïàðîëåì àäìèíèñòðàòîðà
This.ErrorCode = 0
.Password = This.IdOperator
.PrintReportWithoutCleaning()
This.SetErrorCode(.ResultCode)

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE returncheck
* ïå÷àòü ÷åêà âîçâðàòà off-line

WITH THIS
	*------------------------------------------------------------
	* ôîðìèðóåì çàãîëîâîê ÷åêà
	.CheckStart()
	
	*------------------------------------------------------------
	* ôîðìèðóåì ïîçèöèþ âîçâðàòà òîâàðà
	SCAN FOR .ErrorCode = 0
		.ReturnSalePos()
	ENDSCAN
		
	*------------------------------------------------------------
	* çàêðûâàåì ÷åê
	IF .ErrorCode = 0
		.Summ = .SummCheck
		.CloseCheck()
	ENDIF
ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE seterrorcode

LPARAMETER lnErrorCode

*18.04.2006 09:44 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

*18.04.2006 09:45 -&gt;óñòàíîâêà êîäà îøèáêè
IF .ResultCode # 0
	THIS.ErrorCode = lnErrorCode
	MESSAGEBOX(.ResultCodeDescription,48,[Îøèáêà äðàéâåðà ÊÊÌ Øòðèõ])
ENDIF
*------------------------------------------------------------------------------

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
PROCEDURE writetable
LPARAMETERS tnTable, ; &amp;&amp; íîìåð âíóòðåííåé òàáëèöû ÊÊÌ
			tnField, ; &amp;&amp; ïîëå âíóòðåííåé òàáëèöû ÊÊÌ
			tnRow  , ; &amp;&amp; ðÿä âíóòðåííåé òàáëèöû ÊÊÌ
			tuValue    &amp;&amp; çíà÷åíèå

*18.04.2006 09:45 -&gt;Åñëè ðàáîòà ñ ÔÐ íå ðàçðåøåíà - âûõîäèì
IF !This.lEnabled
	RETURN
ENDIF
*------------------------------------------------------------------------------

WITH This.drv

.Password = This.IdOperator
.TableNumber = tnTable
.FieldNumber = tnField
.GetFieldStruct()
.RowNumber = tnRow
IF .FieldType
	.ValueOfFieldString = tuValue
ELSE
	.ValueOfFieldInteger = tuValue
ENDIF
.WriteTable()
This.SetErrorCode(.ResultCode)

ENDWITH
************************************************************************************************
***************************************  END OF METHOD  ****************************************
************************************************************************************************
ENDPROC
</methods>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1>Class</reserved1>
		<reserved2>1</reserved2>
		<reserved3>idoperator òåêóùèé ïàðîëü ïîëüçîâàòåëÿ
summcheck ñóììà ïî ÷åêó
comport íîìåð COM ïîðòà
baudrate ñêîðîñòü îáìåíà  6 = 115200  5 = 57600 è ò.ä.
summ ñóììà ïëàòû
dsccheckperc ïðîöåíò ñêèäêè íà ÷åê
errorcode êîä îøèáêè
drvname èìÿ äðàéâåðà
timeout òàéì-àóò íà ïåðåäà÷ó áàéòà
kkm íàçâàíèå ÊÊÌ
opened ïðèçíàê îòêðûòîãî ïîðòà ñâÿçè
headerfile èìÿ ôàéëà çàãîëîâêà
nameoperator ôàìèëèÿ îïåðàòîðà
allowvat Ïå÷àòàòü ñâåäåíèÿ îá ÍÄÑ â ÷åêå
cutenabled Ðàçðåøèòü îòðåçêó ÷åêà
cuttype
typechargeout
drv
lenabled ðàçðåøåíèå ðàáîòû ñ ÔÐ
makecheck Ñòàòóñ: ÷åê ãîòîâèòñÿ
*info 
*open 
*printsalecheck ïå÷àòü ÷åêà âîçâðàòà
*continueprint ïðîäîëæèòü ïå÷àòü
*seterrorcode óñòàíîâêà êîäà îøèáêè
*ready ãîòîâíîñòü ÊÊÌ ê ïå÷àòè
*errorcodedescription 
*returncheck ÷åê âîçâðàòà
*changeheader ñìåíà çàãîëîâêà ÷åêà
*writetable çàïèñü äàííûõ â òàáëèöó ïàðàìåòðîâ ÊÊÌ
*newoperator ðåãèñòðàöèÿ íîâîãî îïåðàòîðà â ÊÊÌ
*checksaletran ïðîäàæà
*checksalestorno ñòîðíî ïîçèöèè ÷åêà
*checksalereturn ïå÷àòü ÷åêà âîçâðàòà
*reportx X-îò÷åò
*closeshift çàêðûòèå ñìåíû
*cancelcheck ñáðîñ ÷åêà
*closecheck çàêðûòèå ÷åêà
*beep ãóäîê
*printstring ïå÷àòü ñòðîêè
*feeddocument ïðîòÿæêà äîêóìåíòà
*checkdiscount ñêèäêà íà ÷åê
*opendrawer îòêðûòèå äåíåæíîãî ÿùèêà
*cutcheck îòðåçêà ÷åêà
*printheader Ïå÷àòü çàãîëîâêà
*cashincome Âíåñåíèå äåíåã â äåí. ÿùèê
*cashoutcome Èçúÿòèå äåíåã èç êàññû
</reserved3>
		<reserved4/>
		<reserved5/>
		<reserved6>Pixels</reserved6>
		<reserved7>óïðàâëåíèå ÊÊÌ "Øòðèõ"</reserved7>
		<reserved8/>
		<user/>
	</record>
	<record>
		<platform>COMMENT</platform>
		<uniqueid>RESERVED</uniqueid>
		<timestamp>0</timestamp>
		<class/>
		<classloc/>
		<baseclass/>
		<objname>shtrih</objname>
		<parent/>
		<properties/>
		<protected/>
		<methods/>
		<objcode/>
		<ole/>
		<ole2/>
		<reserved1/>
		<reserved2/>
		<reserved3/>
		<reserved4/>
		<reserved5/>
		<reserved6/>
		<reserved7/>
		<reserved8/>
		<user/>
	</record>
</VFPData>
